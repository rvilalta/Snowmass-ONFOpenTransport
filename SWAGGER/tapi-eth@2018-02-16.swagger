{
    "swagger": "2.0",
    "info": {
        "description": "tapi-eth API generated from tapi-eth.yang",
        "version": "1.0.0",
        "title": "tapi-eth API"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/context/": {
            "post": {
                "summary": "Create context by ID",
                "description": "Create operation of resource: context",
                "operationId": "create_context_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "context",
                        "schema": {
                            "$ref": "#/definitions/tapi-context"
                        },
                        "description": "contextbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve context",
                "description": "Retrieve operation of resource: context",
                "operationId": "retrieve_context",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/tapi-context"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update context by ID",
                "description": "Update operation of resource: context",
                "operationId": "update_context_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "context",
                        "schema": {
                            "$ref": "#/definitions/tapi-context"
                        },
                        "description": "contextbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete context by ID",
                "description": "Delete operation of resource: context",
                "operationId": "delete_context_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/": {
            "get": {
                "summary": "Retrieve service-interface-point",
                "description": "Retrieve operation of resource: service-interface-point",
                "operationId": "retrieve_context_service-interface-point_service-interface-point",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service-interface-point/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/": {
            "post": {
                "summary": "Create service-interface-point by ID",
                "description": "Create operation of resource: service-interface-point",
                "operationId": "create_context_service-interface-point_service-interface-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "service-interface-point",
                        "schema": {
                            "$ref": "#/definitions/service-interface-point"
                        },
                        "description": "service-interface-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve service-interface-point by ID",
                "description": "Retrieve operation of resource: service-interface-point",
                "operationId": "retrieve_context_service-interface-point_service-interface-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/service-interface-point"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update service-interface-point by ID",
                "description": "Update operation of resource: service-interface-point",
                "operationId": "update_context_service-interface-point_service-interface-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "service-interface-point",
                        "schema": {
                            "$ref": "#/definitions/service-interface-point"
                        },
                        "description": "service-interface-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete service-interface-point by ID",
                "description": "Delete operation of resource: service-interface-point",
                "operationId": "delete_context_service-interface-point_service-interface-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_service-interface-point_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service-interface-point/{uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_service-interface-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_service-interface-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_service-interface-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_service-interface-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/total-potential-capacity/": {
            "get": {
                "summary": "Retrieve total-potential-capacity",
                "description": "Retrieve operation of resource: total-potential-capacity",
                "operationId": "retrieve_context_service-interface-point_total-potential-capacity_total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/total-potential-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_service-interface-point_total-potential-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/total-potential-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_service-interface-point_total-potential-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/total-potential-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_service-interface-point_total-potential-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/total-potential-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_service-interface-point_total-potential-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/total-potential-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_service-interface-point_total-potential-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/total-potential-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_service-interface-point_total-potential-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/available-capacity/": {
            "get": {
                "summary": "Retrieve available-capacity",
                "description": "Retrieve operation of resource: available-capacity",
                "operationId": "retrieve_context_service-interface-point_available-capacity_available-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/available-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_service-interface-point_available-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/available-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_service-interface-point_available-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/available-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_service-interface-point_available-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/available-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_service-interface-point_available-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/available-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_service-interface-point_available-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/service-interface-point/{uuid}/available-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_service-interface-point_available-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/nw-topology-service/": {
            "get": {
                "summary": "Retrieve nw-topology-service",
                "description": "Retrieve operation of resource: nw-topology-service",
                "operationId": "retrieve_context_nw-topology-service_nw-topology-service",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/network-topology-service"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/nw-topology-service/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_nw-topology-service_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/nw-topology-service/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/nw-topology-service/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_nw-topology-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/": {
            "get": {
                "summary": "Retrieve topology",
                "description": "Retrieve operation of resource: topology",
                "operationId": "retrieve_context_topology_topology",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/": {
            "get": {
                "summary": "Retrieve topology by ID",
                "description": "Retrieve operation of resource: topology",
                "operationId": "retrieve_context_topology_topology_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/topology"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/": {
            "get": {
                "summary": "Retrieve node",
                "description": "Retrieve operation of resource: node",
                "operationId": "retrieve_context_topology_node_node",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/": {
            "get": {
                "summary": "Retrieve node by ID",
                "description": "Retrieve operation of resource: node",
                "operationId": "retrieve_context_topology_node_node_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/node"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/": {
            "get": {
                "summary": "Retrieve owned-node-edge-point",
                "description": "Retrieve operation of resource: owned-node-edge-point",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_owned-node-edge-point",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/": {
            "get": {
                "summary": "Retrieve owned-node-edge-point by ID",
                "description": "Retrieve operation of resource: owned-node-edge-point",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_owned-node-edge-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/node-edge-point"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/total-potential-capacity/": {
            "get": {
                "summary": "Retrieve total-potential-capacity",
                "description": "Retrieve operation of resource: total-potential-capacity",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_total-potential-capacity_total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/total-potential-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_total-potential-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/total-potential-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_total-potential-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/total-potential-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_total-potential-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/total-potential-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_total-potential-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/total-potential-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_total-potential-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/total-potential-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_total-potential-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/available-capacity/": {
            "get": {
                "summary": "Retrieve available-capacity",
                "description": "Retrieve operation of resource: available-capacity",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_available-capacity_available-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/available-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_available-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/available-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_available-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/available-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_available-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/available-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_available-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/available-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_available-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/available-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_available-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/": {
            "get": {
                "summary": "Retrieve connection-end-point",
                "description": "Retrieve operation of resource: connection-end-point",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_connection-end-point",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/": {
            "post": {
                "summary": "Create connection-end-point by ID",
                "description": "Create operation of resource: connection-end-point",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_connection-end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "connection-end-point",
                        "schema": {
                            "$ref": "#/definitions/connection-end-point"
                        },
                        "description": "connection-end-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve connection-end-point by ID",
                "description": "Retrieve operation of resource: connection-end-point",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_connection-end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/connection-end-point"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update connection-end-point by ID",
                "description": "Update operation of resource: connection-end-point",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_connection-end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "connection-end-point",
                        "schema": {
                            "$ref": "#/definitions/connection-end-point"
                        },
                        "description": "connection-end-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete connection-end-point by ID",
                "description": "Delete operation of resource: connection-end-point",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_connection-end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-term/": {
            "post": {
                "summary": "Create eth-term by ID",
                "description": "Create operation of resource: eth-term",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_eth-term_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "eth-term",
                        "schema": {
                            "$ref": "#/definitions/eth-termination-pac"
                        },
                        "description": "eth-termbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve eth-term",
                "description": "Retrieve operation of resource: eth-term",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_eth-term",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/eth-termination-pac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update eth-term by ID",
                "description": "Update operation of resource: eth-term",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_eth-term_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "eth-term",
                        "schema": {
                            "$ref": "#/definitions/eth-termination-pac"
                        },
                        "description": "eth-termbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete eth-term by ID",
                "description": "Delete operation of resource: eth-term",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_eth-term_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-term/priority-regenerate/": {
            "post": {
                "summary": "Create priority-regenerate by ID",
                "description": "Create operation of resource: priority-regenerate",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_priority-regenerate_priority-regenerate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "priority-regenerate",
                        "schema": {
                            "description": "This attribute models the ETHx/ETH-m _A_Sk_MI_P_Regenerate information defined in G.8021.",
                            "$ref": "#/definitions/priority-mapping"
                        },
                        "description": "priority-regeneratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve priority-regenerate",
                "description": "Retrieve operation of resource: priority-regenerate",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_priority-regenerate_priority-regenerate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "This attribute models the ETHx/ETH-m _A_Sk_MI_P_Regenerate information defined in G.8021.",
                            "$ref": "#/definitions/priority-mapping"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update priority-regenerate by ID",
                "description": "Update operation of resource: priority-regenerate",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_priority-regenerate_priority-regenerate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "priority-regenerate",
                        "schema": {
                            "description": "This attribute models the ETHx/ETH-m _A_Sk_MI_P_Regenerate information defined in G.8021.",
                            "$ref": "#/definitions/priority-mapping"
                        },
                        "description": "priority-regeneratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete priority-regenerate by ID",
                "description": "Delete operation of resource: priority-regenerate",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_eth-term_priority-regenerate_priority-regenerate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/": {
            "post": {
                "summary": "Create eth-ctp by ID",
                "description": "Create operation of resource: eth-ctp",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_eth-ctp_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "eth-ctp",
                        "schema": {
                            "$ref": "#/definitions/eth-ctp-pac"
                        },
                        "description": "eth-ctpbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve eth-ctp",
                "description": "Retrieve operation of resource: eth-ctp",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_eth-ctp",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/eth-ctp-pac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update eth-ctp by ID",
                "description": "Update operation of resource: eth-ctp",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_eth-ctp_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "eth-ctp",
                        "schema": {
                            "$ref": "#/definitions/eth-ctp-pac"
                        },
                        "description": "eth-ctpbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete eth-ctp by ID",
                "description": "Delete operation of resource: eth-ctp",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_eth-ctp_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/filter-config/": {
            "post": {
                "summary": "Create filter-config by ID",
                "description": "Create operation of resource: filter-config",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_filter-config_filter-config_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filter-config",
                        "schema": {
                            "description": "This attribute models the FilterConfig MI defined in section 8.3/G.8021. It indicates the configured filter action for each of the 33 group MAC addresses for control frames. The 33 MAC addresses are:\n- All bridges address: 01-80-C2-00-00-10,\n- Reserved addresses: 01-80-C2-00-00-00 to 01-80-C2-00-00-0F,\n- GARP Application addresses: 01-80-C2-00-00-20 to 01-80-C2-00-00-2F.\nThe filter action is Pass or Block. \nIf the destination address of the incoming ETH_CI_D matches one of the above addresses, the filter process shall perform the corresponding configured filter action. \nIf none of the above addresses match, the ETH_CI_D is passed.",
                            "$ref": "#/definitions/control-frame-filter"
                        },
                        "description": "filter-configbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve filter-config",
                "description": "Retrieve operation of resource: filter-config",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_filter-config_filter-config",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "This attribute models the FilterConfig MI defined in section 8.3/G.8021. It indicates the configured filter action for each of the 33 group MAC addresses for control frames. The 33 MAC addresses are:\n- All bridges address: 01-80-C2-00-00-10,\n- Reserved addresses: 01-80-C2-00-00-00 to 01-80-C2-00-00-0F,\n- GARP Application addresses: 01-80-C2-00-00-20 to 01-80-C2-00-00-2F.\nThe filter action is Pass or Block. \nIf the destination address of the incoming ETH_CI_D matches one of the above addresses, the filter process shall perform the corresponding configured filter action. \nIf none of the above addresses match, the ETH_CI_D is passed.",
                            "$ref": "#/definitions/control-frame-filter"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update filter-config by ID",
                "description": "Update operation of resource: filter-config",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_filter-config_filter-config_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filter-config",
                        "schema": {
                            "description": "This attribute models the FilterConfig MI defined in section 8.3/G.8021. It indicates the configured filter action for each of the 33 group MAC addresses for control frames. The 33 MAC addresses are:\n- All bridges address: 01-80-C2-00-00-10,\n- Reserved addresses: 01-80-C2-00-00-00 to 01-80-C2-00-00-0F,\n- GARP Application addresses: 01-80-C2-00-00-20 to 01-80-C2-00-00-2F.\nThe filter action is Pass or Block. \nIf the destination address of the incoming ETH_CI_D matches one of the above addresses, the filter process shall perform the corresponding configured filter action. \nIf none of the above addresses match, the ETH_CI_D is passed.",
                            "$ref": "#/definitions/control-frame-filter"
                        },
                        "description": "filter-configbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete filter-config by ID",
                "description": "Delete operation of resource: filter-config",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_filter-config_filter-config_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/traffic-shaping/": {
            "post": {
                "summary": "Create traffic-shaping by ID",
                "description": "Create operation of resource: traffic-shaping",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-shaping_traffic-shaping_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "traffic-shaping",
                        "schema": {
                            "$ref": "#/definitions/traffic-shaping-pac"
                        },
                        "description": "traffic-shapingbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve traffic-shaping",
                "description": "Retrieve operation of resource: traffic-shaping",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-shaping_traffic-shaping",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/traffic-shaping-pac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update traffic-shaping by ID",
                "description": "Update operation of resource: traffic-shaping",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-shaping_traffic-shaping_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "traffic-shaping",
                        "schema": {
                            "$ref": "#/definitions/traffic-shaping-pac"
                        },
                        "description": "traffic-shapingbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete traffic-shaping by ID",
                "description": "Delete operation of resource: traffic-shaping",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-shaping_traffic-shaping_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/traffic-shaping/prio-config-list/": {
            "get": {
                "summary": "Retrieve prio-config-list",
                "description": "Retrieve operation of resource: prio-config-list",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-shaping_prio-config-list_prio-config-list",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/priority-configuration"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/traffic-shaping/queue-config-list/": {
            "get": {
                "summary": "Retrieve queue-config-list",
                "description": "Retrieve operation of resource: queue-config-list",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-shaping_queue-config-list_queue-config-list",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/queue-configuration"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/traffic-conditioning/": {
            "post": {
                "summary": "Create traffic-conditioning by ID",
                "description": "Create operation of resource: traffic-conditioning",
                "operationId": "create_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-conditioning_traffic-conditioning_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "traffic-conditioning",
                        "schema": {
                            "$ref": "#/definitions/traffic-conditioning-pac"
                        },
                        "description": "traffic-conditioningbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve traffic-conditioning",
                "description": "Retrieve operation of resource: traffic-conditioning",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-conditioning_traffic-conditioning",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/traffic-conditioning-pac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update traffic-conditioning by ID",
                "description": "Update operation of resource: traffic-conditioning",
                "operationId": "update_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-conditioning_traffic-conditioning_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "traffic-conditioning",
                        "schema": {
                            "$ref": "#/definitions/traffic-conditioning-pac"
                        },
                        "description": "traffic-conditioningbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete traffic-conditioning by ID",
                "description": "Delete operation of resource: traffic-conditioning",
                "operationId": "delete_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-conditioning_traffic-conditioning_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/traffic-conditioning/prio-config-list/": {
            "get": {
                "summary": "Retrieve prio-config-list",
                "description": "Retrieve operation of resource: prio-config-list",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-conditioning_prio-config-list_prio-config-list",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/priority-configuration"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/connection-end-point/{connection_end_point_uuid}/eth-ctp/traffic-conditioning/cond-config-list/": {
            "get": {
                "summary": "Retrieve cond-config-list",
                "description": "Retrieve operation of resource: cond-config-list",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_connection-end-point_eth-ctp_traffic-conditioning_cond-config-list_cond-config-list",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "connection_end_point_uuid",
                        "description": "ID of connection_end_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/traffic-conditioning-configuration"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned_node_edge_point_uuid}/ety-term/": {
            "get": {
                "summary": "Retrieve ety-term",
                "description": "Retrieve operation of resource: ety-term",
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_ety-term_ety-term",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "owned_node_edge_point_uuid",
                        "description": "ID of owned_node_edge_point_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ety-termination-pac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/": {
            "get": {
                "summary": "Retrieve node-rule-group",
                "description": "Retrieve operation of resource: node-rule-group",
                "operationId": "retrieve_context_topology_node_node-rule-group_node-rule-group",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/": {
            "get": {
                "summary": "Retrieve node-rule-group by ID",
                "description": "Retrieve operation of resource: node-rule-group",
                "operationId": "retrieve_context_topology_node_node-rule-group_node-rule-group_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/node-rule-group"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/rule/": {
            "get": {
                "summary": "Retrieve rule",
                "description": "Retrieve operation of resource: rule",
                "operationId": "retrieve_context_topology_node_node-rule-group_rule_rule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/rule/{local_id}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/rule/{local_id}/": {
            "get": {
                "summary": "Retrieve rule by ID",
                "description": "Retrieve operation of resource: rule",
                "operationId": "retrieve_context_topology_node_node-rule-group_rule_rule_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/rule"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/rule/{local_id}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_rule_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/rule/{local_id}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/rule/{local_id}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_rule_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/": {
            "get": {
                "summary": "Retrieve inter-rule-group",
                "description": "Retrieve operation of resource: inter-rule-group",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_inter-rule-group",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/": {
            "get": {
                "summary": "Retrieve inter-rule-group by ID",
                "description": "Retrieve operation of resource: inter-rule-group",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_inter-rule-group_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/inter-rule-group"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/rule/": {
            "get": {
                "summary": "Retrieve rule",
                "description": "Retrieve operation of resource: rule",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_rule_rule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/rule/{local_id}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/rule/{local_id}/": {
            "get": {
                "summary": "Retrieve rule by ID",
                "description": "Retrieve operation of resource: rule",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_rule_rule_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/rule"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/rule/{local_id}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_rule_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/rule/{local_id}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/rule/{local_id}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_rule_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/total-potential-capacity/": {
            "get": {
                "summary": "Retrieve total-potential-capacity",
                "description": "Retrieve operation of resource: total-potential-capacity",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_total-potential-capacity_total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/total-potential-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_total-potential-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/total-potential-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_total-potential-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/total-potential-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_total-potential-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/total-potential-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_total-potential-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/total-potential-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_total-potential-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/total-potential-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_total-potential-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/available-capacity/": {
            "get": {
                "summary": "Retrieve available-capacity",
                "description": "Retrieve operation of resource: available-capacity",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_available-capacity_available-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/available-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_available-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/available-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_available-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/available-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_available-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/available-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_available-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/available-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_available-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/available-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_available-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/cost-characteristic/": {
            "get": {
                "summary": "Retrieve cost-characteristic",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_cost-characteristic_cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/cost-characteristic/{cost_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/cost-characteristic/{cost_name}/": {
            "get": {
                "summary": "Retrieve cost-characteristic by ID",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/latency-characteristic/": {
            "get": {
                "summary": "Retrieve latency-characteristic",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_latency-characteristic_latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/latency-characteristic/{traffic_property_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/latency-characteristic/{traffic_property_name}/": {
            "get": {
                "summary": "Retrieve latency-characteristic by ID",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/risk-characteristic/": {
            "get": {
                "summary": "Retrieve risk-characteristic",
                "description": "Retrieve operation of resource: risk-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_risk-characteristic_risk-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/risk-characteristic/{risk_characteristic_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/inter-rule-group/{inter_rule_group_uuid}/risk-characteristic/{risk_characteristic_name}/": {
            "get": {
                "summary": "Retrieve risk-characteristic by ID",
                "description": "Retrieve operation of resource: risk-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_inter-rule-group_risk-characteristic_risk-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inter_rule_group_uuid",
                        "description": "ID of inter_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "risk_characteristic_name",
                        "description": "ID of risk_characteristic_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/risk-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_node-rule-group_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/total-potential-capacity/": {
            "get": {
                "summary": "Retrieve total-potential-capacity",
                "description": "Retrieve operation of resource: total-potential-capacity",
                "operationId": "retrieve_context_topology_node_node-rule-group_total-potential-capacity_total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/total-potential-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_total-potential-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/total-potential-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_node-rule-group_total-potential-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/total-potential-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_total-potential-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/total-potential-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_total-potential-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/total-potential-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_total-potential-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/total-potential-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_total-potential-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/available-capacity/": {
            "get": {
                "summary": "Retrieve available-capacity",
                "description": "Retrieve operation of resource: available-capacity",
                "operationId": "retrieve_context_topology_node_node-rule-group_available-capacity_available-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/available-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_available-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/available-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_node-rule-group_available-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/available-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_available-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/available-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_available-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/available-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_node-rule-group_available-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/available-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_node-rule-group_available-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/cost-characteristic/": {
            "get": {
                "summary": "Retrieve cost-characteristic",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_cost-characteristic_cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/cost-characteristic/{cost_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/cost-characteristic/{cost_name}/": {
            "get": {
                "summary": "Retrieve cost-characteristic by ID",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/latency-characteristic/": {
            "get": {
                "summary": "Retrieve latency-characteristic",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_latency-characteristic_latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/latency-characteristic/{traffic_property_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/latency-characteristic/{traffic_property_name}/": {
            "get": {
                "summary": "Retrieve latency-characteristic by ID",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/risk-characteristic/": {
            "get": {
                "summary": "Retrieve risk-characteristic",
                "description": "Retrieve operation of resource: risk-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_risk-characteristic_risk-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/risk-characteristic/{risk_characteristic_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/node-rule-group/{node_rule_group_uuid}/risk-characteristic/{risk_characteristic_name}/": {
            "get": {
                "summary": "Retrieve risk-characteristic by ID",
                "description": "Retrieve operation of resource: risk-characteristic",
                "operationId": "retrieve_context_topology_node_node-rule-group_risk-characteristic_risk-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_rule_group_uuid",
                        "description": "ID of node_rule_group_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "risk_characteristic_name",
                        "description": "ID of risk_characteristic_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/risk-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_node_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/total-potential-capacity/": {
            "get": {
                "summary": "Retrieve total-potential-capacity",
                "description": "Retrieve operation of resource: total-potential-capacity",
                "operationId": "retrieve_context_topology_node_total-potential-capacity_total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/total-potential-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_total-potential-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/total-potential-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_total-potential-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/total-potential-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_total-potential-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/total-potential-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_total-potential-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/total-potential-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_total-potential-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/total-potential-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_total-potential-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/available-capacity/": {
            "get": {
                "summary": "Retrieve available-capacity",
                "description": "Retrieve operation of resource: available-capacity",
                "operationId": "retrieve_context_topology_node_available-capacity_available-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/available-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_node_available-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/available-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_node_available-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/available-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_node_available-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/available-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_node_available-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/available-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_node_available-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/available-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_node_available-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/cost-characteristic/": {
            "get": {
                "summary": "Retrieve cost-characteristic",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_node_cost-characteristic_cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/cost-characteristic/{cost_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/cost-characteristic/{cost_name}/": {
            "get": {
                "summary": "Retrieve cost-characteristic by ID",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_node_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/latency-characteristic/": {
            "get": {
                "summary": "Retrieve latency-characteristic",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_node_latency-characteristic_latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/latency-characteristic/{traffic_property_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/latency-characteristic/{traffic_property_name}/": {
            "get": {
                "summary": "Retrieve latency-characteristic by ID",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_node_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/": {
            "get": {
                "summary": "Retrieve link",
                "description": "Retrieve operation of resource: link",
                "operationId": "retrieve_context_topology_link_link",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/": {
            "get": {
                "summary": "Retrieve link by ID",
                "description": "Retrieve operation of resource: link",
                "operationId": "retrieve_context_topology_link_link_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/link"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/resilience-type/": {
            "get": {
                "summary": "Retrieve resilience-type",
                "description": "Retrieve operation of resource: resilience-type",
                "operationId": "retrieve_context_topology_link_resilience-type_resilience-type",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/resilience-type"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_link_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_link_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/total-potential-capacity/": {
            "get": {
                "summary": "Retrieve total-potential-capacity",
                "description": "Retrieve operation of resource: total-potential-capacity",
                "operationId": "retrieve_context_topology_link_total-potential-capacity_total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/total-potential-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_link_total-potential-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/total-potential-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_link_total-potential-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/total-potential-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_link_total-potential-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/total-potential-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_link_total-potential-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/total-potential-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_link_total-potential-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/total-potential-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_link_total-potential-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/available-capacity/": {
            "get": {
                "summary": "Retrieve available-capacity",
                "description": "Retrieve operation of resource: available-capacity",
                "operationId": "retrieve_context_topology_link_available-capacity_available-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/available-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_topology_link_available-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/available-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_topology_link_available-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/available-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_topology_link_available-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/available-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_topology_link_available-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/available-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_topology_link_available-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/available-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_topology_link_available-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/cost-characteristic/": {
            "get": {
                "summary": "Retrieve cost-characteristic",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_link_cost-characteristic_cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/cost-characteristic/{cost_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/cost-characteristic/{cost_name}/": {
            "get": {
                "summary": "Retrieve cost-characteristic by ID",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_topology_link_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/latency-characteristic/": {
            "get": {
                "summary": "Retrieve latency-characteristic",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_link_latency-characteristic_latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/latency-characteristic/{traffic_property_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/latency-characteristic/{traffic_property_name}/": {
            "get": {
                "summary": "Retrieve latency-characteristic by ID",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_topology_link_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/risk-characteristic/": {
            "get": {
                "summary": "Retrieve risk-characteristic",
                "description": "Retrieve operation of resource: risk-characteristic",
                "operationId": "retrieve_context_topology_link_risk-characteristic_risk-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/risk-characteristic/{risk_characteristic_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/risk-characteristic/{risk_characteristic_name}/": {
            "get": {
                "summary": "Retrieve risk-characteristic by ID",
                "description": "Retrieve operation of resource: risk-characteristic",
                "operationId": "retrieve_context_topology_link_risk-characteristic_risk-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "risk_characteristic_name",
                        "description": "ID of risk_characteristic_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/risk-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/validation-mechanism/": {
            "get": {
                "summary": "Retrieve validation-mechanism",
                "description": "Retrieve operation of resource: validation-mechanism",
                "operationId": "retrieve_context_topology_link_validation-mechanism_validation-mechanism",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/validation-mechanism/{validation_mechanism}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/validation-mechanism/{validation_mechanism}/": {
            "get": {
                "summary": "Retrieve validation-mechanism by ID",
                "description": "Retrieve operation of resource: validation-mechanism",
                "operationId": "retrieve_context_topology_link_validation-mechanism_validation-mechanism_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "validation_mechanism",
                        "description": "ID of validation_mechanism",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/validation-mechanism"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/topology/{uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_topology_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/": {
            "get": {
                "summary": "Retrieve path-comp-service",
                "description": "Retrieve operation of resource: path-comp-service",
                "operationId": "retrieve_context_path-comp-service_path-comp-service",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/": {
            "post": {
                "summary": "Create path-comp-service by ID",
                "description": "Create operation of resource: path-comp-service",
                "operationId": "create_context_path-comp-service_path-comp-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "path-comp-service",
                        "schema": {
                            "$ref": "#/definitions/path-computation-service"
                        },
                        "description": "path-comp-servicebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve path-comp-service by ID",
                "description": "Retrieve operation of resource: path-comp-service",
                "operationId": "retrieve_context_path-comp-service_path-comp-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/path-computation-service"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update path-comp-service by ID",
                "description": "Update operation of resource: path-comp-service",
                "operationId": "update_context_path-comp-service_path-comp-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "path-comp-service",
                        "schema": {
                            "$ref": "#/definitions/path-computation-service"
                        },
                        "description": "path-comp-servicebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete path-comp-service by ID",
                "description": "Delete operation of resource: path-comp-service",
                "operationId": "delete_context_path-comp-service_path-comp-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/end-point/": {
            "get": {
                "summary": "Retrieve end-point",
                "description": "Retrieve operation of resource: end-point",
                "operationId": "retrieve_context_path-comp-service_end-point_end-point",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/end-point/{local_id}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/end-point/{local_id}/": {
            "post": {
                "summary": "Create end-point by ID",
                "description": "Create operation of resource: end-point",
                "operationId": "create_context_path-comp-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "end-point",
                        "schema": {
                            "$ref": "#/definitions/path-service-end-point"
                        },
                        "description": "end-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve end-point by ID",
                "description": "Retrieve operation of resource: end-point",
                "operationId": "retrieve_context_path-comp-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/path-service-end-point"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update end-point by ID",
                "description": "Update operation of resource: end-point",
                "operationId": "update_context_path-comp-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "end-point",
                        "schema": {
                            "$ref": "#/definitions/path-service-end-point"
                        },
                        "description": "end-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete end-point by ID",
                "description": "Delete operation of resource: end-point",
                "operationId": "delete_context_path-comp-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/end-point/{local_id}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_end-point_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/end-point/{local_id}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/end-point/{local_id}/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_path-comp-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_path-comp-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_path-comp-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/": {
            "post": {
                "summary": "Create routing-constraint by ID",
                "description": "Create operation of resource: routing-constraint",
                "operationId": "create_context_path-comp-service_routing-constraint_routing-constraint_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "routing-constraint",
                        "schema": {
                            "$ref": "#/definitions/routing-constraint"
                        },
                        "description": "routing-constraintbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve routing-constraint",
                "description": "Retrieve operation of resource: routing-constraint",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_routing-constraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/routing-constraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update routing-constraint by ID",
                "description": "Update operation of resource: routing-constraint",
                "operationId": "update_context_path-comp-service_routing-constraint_routing-constraint_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "routing-constraint",
                        "schema": {
                            "$ref": "#/definitions/routing-constraint"
                        },
                        "description": "routing-constraintbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete routing-constraint by ID",
                "description": "Delete operation of resource: routing-constraint",
                "operationId": "delete_context_path-comp-service_routing-constraint_routing-constraint_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/requested-capacity/": {
            "get": {
                "summary": "Retrieve requested-capacity",
                "description": "Retrieve operation of resource: requested-capacity",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_requested-capacity_requested-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/requested-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_requested-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_requested-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_requested-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_requested-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_requested-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_requested-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/cost-characteristic/": {
            "get": {
                "summary": "Retrieve cost-characteristic",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_cost-characteristic_cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/routing-constraint/cost-characteristic/{cost_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/cost-characteristic/{cost_name}/": {
            "get": {
                "summary": "Retrieve cost-characteristic by ID",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/latency-characteristic/": {
            "get": {
                "summary": "Retrieve latency-characteristic",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_latency-characteristic_latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/routing-constraint/latency-characteristic/{traffic_property_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/latency-characteristic/{traffic_property_name}/": {
            "get": {
                "summary": "Retrieve latency-characteristic by ID",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/routing-constraint/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/routing-constraint/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_path-comp-service_routing-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_routing-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_path-comp-service_routing-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_path-comp-service_routing-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/objective-function/": {
            "post": {
                "summary": "Create objective-function by ID",
                "description": "Create operation of resource: objective-function",
                "operationId": "create_context_path-comp-service_objective-function_objective-function_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "objective-function",
                        "schema": {
                            "$ref": "#/definitions/path-objective-function"
                        },
                        "description": "objective-functionbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve objective-function",
                "description": "Retrieve operation of resource: objective-function",
                "operationId": "retrieve_context_path-comp-service_objective-function_objective-function",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/path-objective-function"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update objective-function by ID",
                "description": "Update operation of resource: objective-function",
                "operationId": "update_context_path-comp-service_objective-function_objective-function_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "objective-function",
                        "schema": {
                            "$ref": "#/definitions/path-objective-function"
                        },
                        "description": "objective-functionbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete objective-function by ID",
                "description": "Delete operation of resource: objective-function",
                "operationId": "delete_context_path-comp-service_objective-function_objective-function_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/objective-function/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_objective-function_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/objective-function/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/objective-function/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_path-comp-service_objective-function_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_objective-function_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_path-comp-service_objective-function_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_path-comp-service_objective-function_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/optimization-constraint/": {
            "post": {
                "summary": "Create optimization-constraint by ID",
                "description": "Create operation of resource: optimization-constraint",
                "operationId": "create_context_path-comp-service_optimization-constraint_optimization-constraint_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "optimization-constraint",
                        "schema": {
                            "$ref": "#/definitions/path-optimization-constraint"
                        },
                        "description": "optimization-constraintbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve optimization-constraint",
                "description": "Retrieve operation of resource: optimization-constraint",
                "operationId": "retrieve_context_path-comp-service_optimization-constraint_optimization-constraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/path-optimization-constraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update optimization-constraint by ID",
                "description": "Update operation of resource: optimization-constraint",
                "operationId": "update_context_path-comp-service_optimization-constraint_optimization-constraint_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "optimization-constraint",
                        "schema": {
                            "$ref": "#/definitions/path-optimization-constraint"
                        },
                        "description": "optimization-constraintbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete optimization-constraint by ID",
                "description": "Delete operation of resource: optimization-constraint",
                "operationId": "delete_context_path-comp-service_optimization-constraint_optimization-constraint_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/optimization-constraint/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_optimization-constraint_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/optimization-constraint/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/optimization-constraint/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_path-comp-service_optimization-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_optimization-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_path-comp-service_optimization-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_path-comp-service_optimization-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path-comp-service/{uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path-comp-service/{uuid}/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_path-comp-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path-comp-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_path-comp-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_path-comp-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/": {
            "get": {
                "summary": "Retrieve path",
                "description": "Retrieve operation of resource: path",
                "operationId": "retrieve_context_path_path",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/": {
            "get": {
                "summary": "Retrieve path by ID",
                "description": "Retrieve operation of resource: path",
                "operationId": "retrieve_context_path_path_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/path"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/": {
            "get": {
                "summary": "Retrieve routing-constraint",
                "description": "Retrieve operation of resource: routing-constraint",
                "operationId": "retrieve_context_path_routing-constraint_routing-constraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/routing-constraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/requested-capacity/": {
            "get": {
                "summary": "Retrieve requested-capacity",
                "description": "Retrieve operation of resource: requested-capacity",
                "operationId": "retrieve_context_path_routing-constraint_requested-capacity_requested-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/requested-capacity/total-size/": {
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_path_routing-constraint_requested-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/": {
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_path_routing-constraint_requested-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/committed-information-rate/": {
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_path_routing-constraint_requested-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/committed-burst-size/": {
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_path_routing-constraint_requested-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/peak-information-rate/": {
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_path_routing-constraint_requested-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/requested-capacity/bandwidth-profile/peak-burst-size/": {
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_path_routing-constraint_requested-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/cost-characteristic/": {
            "get": {
                "summary": "Retrieve cost-characteristic",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_path_routing-constraint_cost-characteristic_cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path/{uuid}/routing-constraint/cost-characteristic/{cost_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/cost-characteristic/{cost_name}/": {
            "get": {
                "summary": "Retrieve cost-characteristic by ID",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_path_routing-constraint_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/latency-characteristic/": {
            "get": {
                "summary": "Retrieve latency-characteristic",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_path_routing-constraint_latency-characteristic_latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path/{uuid}/routing-constraint/latency-characteristic/{traffic_property_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/latency-characteristic/{traffic_property_name}/": {
            "get": {
                "summary": "Retrieve latency-characteristic by ID",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_path_routing-constraint_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path_routing-constraint_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path/{uuid}/routing-constraint/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/routing-constraint/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path_routing-constraint_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/path/{uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/path/{uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_path_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/": {
            "get": {
                "summary": "Retrieve connectivity-service",
                "description": "Retrieve operation of resource: connectivity-service",
                "operationId": "retrieve_context_connectivity-service_connectivity-service",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connectivity-service/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/": {
            "post": {
                "summary": "Create connectivity-service by ID",
                "description": "Create operation of resource: connectivity-service",
                "operationId": "create_context_connectivity-service_connectivity-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "connectivity-service",
                        "schema": {
                            "$ref": "#/definitions/connectivity-service"
                        },
                        "description": "connectivity-servicebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve connectivity-service by ID",
                "description": "Retrieve operation of resource: connectivity-service",
                "operationId": "retrieve_context_connectivity-service_connectivity-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/connectivity-service"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update connectivity-service by ID",
                "description": "Update operation of resource: connectivity-service",
                "operationId": "update_context_connectivity-service_connectivity-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "connectivity-service",
                        "schema": {
                            "$ref": "#/definitions/connectivity-service"
                        },
                        "description": "connectivity-servicebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete connectivity-service by ID",
                "description": "Delete operation of resource: connectivity-service",
                "operationId": "delete_context_connectivity-service_connectivity-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/": {
            "get": {
                "summary": "Retrieve end-point",
                "description": "Retrieve operation of resource: end-point",
                "operationId": "retrieve_context_connectivity-service_end-point_end-point",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connectivity-service/{uuid}/end-point/{local_id}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/": {
            "post": {
                "summary": "Create end-point by ID",
                "description": "Create operation of resource: end-point",
                "operationId": "create_context_connectivity-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "end-point",
                        "schema": {
                            "$ref": "#/definitions/connectivity-service-end-point"
                        },
                        "description": "end-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve end-point by ID",
                "description": "Retrieve operation of resource: end-point",
                "operationId": "retrieve_context_connectivity-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/connectivity-service-end-point"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update end-point by ID",
                "description": "Update operation of resource: end-point",
                "operationId": "update_context_connectivity-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "end-point",
                        "schema": {
                            "$ref": "#/definitions/connectivity-service-end-point"
                        },
                        "description": "end-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete end-point by ID",
                "description": "Delete operation of resource: end-point",
                "operationId": "delete_context_connectivity-service_end-point_end-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/capacity/": {
            "post": {
                "summary": "Create capacity by ID",
                "description": "Create operation of resource: capacity",
                "operationId": "create_context_connectivity-service_end-point_capacity_capacity_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "capacity",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        },
                        "description": "capacitybody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve capacity",
                "description": "Retrieve operation of resource: capacity",
                "operationId": "retrieve_context_connectivity-service_end-point_capacity_capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update capacity by ID",
                "description": "Update operation of resource: capacity",
                "operationId": "update_context_connectivity-service_end-point_capacity_capacity_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "capacity",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        },
                        "description": "capacitybody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete capacity by ID",
                "description": "Delete operation of resource: capacity",
                "operationId": "delete_context_connectivity-service_end-point_capacity_capacity_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/capacity/total-size/": {
            "post": {
                "summary": "Create total-size by ID",
                "description": "Create operation of resource: total-size",
                "operationId": "create_context_connectivity-service_end-point_capacity_total-size_total-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "total-size",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "total-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_connectivity-service_end-point_capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update total-size by ID",
                "description": "Update operation of resource: total-size",
                "operationId": "update_context_connectivity-service_end-point_capacity_total-size_total-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "total-size",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "total-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete total-size by ID",
                "description": "Delete operation of resource: total-size",
                "operationId": "delete_context_connectivity-service_end-point_capacity_total-size_total-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/capacity/bandwidth-profile/": {
            "post": {
                "summary": "Create bandwidth-profile by ID",
                "description": "Create operation of resource: bandwidth-profile",
                "operationId": "create_context_connectivity-service_end-point_capacity_bandwidth-profile_bandwidth-profile_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "bandwidth-profile",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        },
                        "description": "bandwidth-profilebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_connectivity-service_end-point_capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update bandwidth-profile by ID",
                "description": "Update operation of resource: bandwidth-profile",
                "operationId": "update_context_connectivity-service_end-point_capacity_bandwidth-profile_bandwidth-profile_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "bandwidth-profile",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        },
                        "description": "bandwidth-profilebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete bandwidth-profile by ID",
                "description": "Delete operation of resource: bandwidth-profile",
                "operationId": "delete_context_connectivity-service_end-point_capacity_bandwidth-profile_bandwidth-profile_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/capacity/bandwidth-profile/committed-information-rate/": {
            "post": {
                "summary": "Create committed-information-rate by ID",
                "description": "Create operation of resource: committed-information-rate",
                "operationId": "create_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-information-rate_committed-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update committed-information-rate by ID",
                "description": "Update operation of resource: committed-information-rate",
                "operationId": "update_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-information-rate_committed-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete committed-information-rate by ID",
                "description": "Delete operation of resource: committed-information-rate",
                "operationId": "delete_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-information-rate_committed-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/capacity/bandwidth-profile/committed-burst-size/": {
            "post": {
                "summary": "Create committed-burst-size by ID",
                "description": "Create operation of resource: committed-burst-size",
                "operationId": "create_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-burst-size_committed-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update committed-burst-size by ID",
                "description": "Update operation of resource: committed-burst-size",
                "operationId": "update_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-burst-size_committed-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete committed-burst-size by ID",
                "description": "Delete operation of resource: committed-burst-size",
                "operationId": "delete_context_connectivity-service_end-point_capacity_bandwidth-profile_committed-burst-size_committed-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/capacity/bandwidth-profile/peak-information-rate/": {
            "post": {
                "summary": "Create peak-information-rate by ID",
                "description": "Create operation of resource: peak-information-rate",
                "operationId": "create_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-information-rate_peak-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update peak-information-rate by ID",
                "description": "Update operation of resource: peak-information-rate",
                "operationId": "update_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-information-rate_peak-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete peak-information-rate by ID",
                "description": "Delete operation of resource: peak-information-rate",
                "operationId": "delete_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-information-rate_peak-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/capacity/bandwidth-profile/peak-burst-size/": {
            "post": {
                "summary": "Create peak-burst-size by ID",
                "description": "Create operation of resource: peak-burst-size",
                "operationId": "create_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-burst-size_peak-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update peak-burst-size by ID",
                "description": "Update operation of resource: peak-burst-size",
                "operationId": "update_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-burst-size_peak-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete peak-burst-size by ID",
                "description": "Delete operation of resource: peak-burst-size",
                "operationId": "delete_context_connectivity-service_end-point_capacity_bandwidth-profile_peak-burst-size_peak-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connectivity-service_end-point_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connectivity-service/{uuid}/end-point/{local_id}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/end-point/{local_id}/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_connectivity-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connectivity-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_connectivity-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_connectivity-service_end-point_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connectivity-service_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connectivity-service/{uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/name/{value_name}/": {
            "post": {
                "summary": "Create name by ID",
                "description": "Create operation of resource: name",
                "operationId": "create_context_connectivity-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connectivity-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update name by ID",
                "description": "Update operation of resource: name",
                "operationId": "update_context_connectivity-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete name by ID",
                "description": "Delete operation of resource: name",
                "operationId": "delete_context_connectivity-service_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/requested-capacity/": {
            "post": {
                "summary": "Create requested-capacity by ID",
                "description": "Create operation of resource: requested-capacity",
                "operationId": "create_context_connectivity-service_requested-capacity_requested-capacity_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requested-capacity",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        },
                        "description": "requested-capacitybody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve requested-capacity",
                "description": "Retrieve operation of resource: requested-capacity",
                "operationId": "retrieve_context_connectivity-service_requested-capacity_requested-capacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update requested-capacity by ID",
                "description": "Update operation of resource: requested-capacity",
                "operationId": "update_context_connectivity-service_requested-capacity_requested-capacity_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requested-capacity",
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        },
                        "description": "requested-capacitybody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete requested-capacity by ID",
                "description": "Delete operation of resource: requested-capacity",
                "operationId": "delete_context_connectivity-service_requested-capacity_requested-capacity_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/requested-capacity/total-size/": {
            "post": {
                "summary": "Create total-size by ID",
                "description": "Create operation of resource: total-size",
                "operationId": "create_context_connectivity-service_requested-capacity_total-size_total-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "total-size",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "total-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve total-size",
                "description": "Retrieve operation of resource: total-size",
                "operationId": "retrieve_context_connectivity-service_requested-capacity_total-size_total-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update total-size by ID",
                "description": "Update operation of resource: total-size",
                "operationId": "update_context_connectivity-service_requested-capacity_total-size_total-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "total-size",
                        "schema": {
                            "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "total-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete total-size by ID",
                "description": "Delete operation of resource: total-size",
                "operationId": "delete_context_connectivity-service_requested-capacity_total-size_total-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/requested-capacity/bandwidth-profile/": {
            "post": {
                "summary": "Create bandwidth-profile by ID",
                "description": "Create operation of resource: bandwidth-profile",
                "operationId": "create_context_connectivity-service_requested-capacity_bandwidth-profile_bandwidth-profile_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "bandwidth-profile",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        },
                        "description": "bandwidth-profilebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve bandwidth-profile",
                "description": "Retrieve operation of resource: bandwidth-profile",
                "operationId": "retrieve_context_connectivity-service_requested-capacity_bandwidth-profile_bandwidth-profile",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update bandwidth-profile by ID",
                "description": "Update operation of resource: bandwidth-profile",
                "operationId": "update_context_connectivity-service_requested-capacity_bandwidth-profile_bandwidth-profile_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "bandwidth-profile",
                        "schema": {
                            "$ref": "#/definitions/bandwidth-profile"
                        },
                        "description": "bandwidth-profilebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete bandwidth-profile by ID",
                "description": "Delete operation of resource: bandwidth-profile",
                "operationId": "delete_context_connectivity-service_requested-capacity_bandwidth-profile_bandwidth-profile_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/requested-capacity/bandwidth-profile/committed-information-rate/": {
            "post": {
                "summary": "Create committed-information-rate by ID",
                "description": "Create operation of resource: committed-information-rate",
                "operationId": "create_context_connectivity-service_requested-capacity_bandwidth-profile_committed-information-rate_committed-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve committed-information-rate",
                "description": "Retrieve operation of resource: committed-information-rate",
                "operationId": "retrieve_context_connectivity-service_requested-capacity_bandwidth-profile_committed-information-rate_committed-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update committed-information-rate by ID",
                "description": "Update operation of resource: committed-information-rate",
                "operationId": "update_context_connectivity-service_requested-capacity_bandwidth-profile_committed-information-rate_committed-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete committed-information-rate by ID",
                "description": "Delete operation of resource: committed-information-rate",
                "operationId": "delete_context_connectivity-service_requested-capacity_bandwidth-profile_committed-information-rate_committed-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/requested-capacity/bandwidth-profile/committed-burst-size/": {
            "post": {
                "summary": "Create committed-burst-size by ID",
                "description": "Create operation of resource: committed-burst-size",
                "operationId": "create_context_connectivity-service_requested-capacity_bandwidth-profile_committed-burst-size_committed-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve committed-burst-size",
                "description": "Retrieve operation of resource: committed-burst-size",
                "operationId": "retrieve_context_connectivity-service_requested-capacity_bandwidth-profile_committed-burst-size_committed-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update committed-burst-size by ID",
                "description": "Update operation of resource: committed-burst-size",
                "operationId": "update_context_connectivity-service_requested-capacity_bandwidth-profile_committed-burst-size_committed-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "committed-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "committed-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete committed-burst-size by ID",
                "description": "Delete operation of resource: committed-burst-size",
                "operationId": "delete_context_connectivity-service_requested-capacity_bandwidth-profile_committed-burst-size_committed-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/requested-capacity/bandwidth-profile/peak-information-rate/": {
            "post": {
                "summary": "Create peak-information-rate by ID",
                "description": "Create operation of resource: peak-information-rate",
                "operationId": "create_context_connectivity-service_requested-capacity_bandwidth-profile_peak-information-rate_peak-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve peak-information-rate",
                "description": "Retrieve operation of resource: peak-information-rate",
                "operationId": "retrieve_context_connectivity-service_requested-capacity_bandwidth-profile_peak-information-rate_peak-information-rate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update peak-information-rate by ID",
                "description": "Update operation of resource: peak-information-rate",
                "operationId": "update_context_connectivity-service_requested-capacity_bandwidth-profile_peak-information-rate_peak-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-information-rate",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-information-ratebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete peak-information-rate by ID",
                "description": "Delete operation of resource: peak-information-rate",
                "operationId": "delete_context_connectivity-service_requested-capacity_bandwidth-profile_peak-information-rate_peak-information-rate_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/requested-capacity/bandwidth-profile/peak-burst-size/": {
            "post": {
                "summary": "Create peak-burst-size by ID",
                "description": "Create operation of resource: peak-burst-size",
                "operationId": "create_context_connectivity-service_requested-capacity_bandwidth-profile_peak-burst-size_peak-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve peak-burst-size",
                "description": "Retrieve operation of resource: peak-burst-size",
                "operationId": "retrieve_context_connectivity-service_requested-capacity_bandwidth-profile_peak-burst-size_peak-burst-size",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update peak-burst-size by ID",
                "description": "Update operation of resource: peak-burst-size",
                "operationId": "update_context_connectivity-service_requested-capacity_bandwidth-profile_peak-burst-size_peak-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "peak-burst-size",
                        "schema": {
                            "$ref": "#/definitions/capacity-value"
                        },
                        "description": "peak-burst-sizebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete peak-burst-size by ID",
                "description": "Delete operation of resource: peak-burst-size",
                "operationId": "delete_context_connectivity-service_requested-capacity_bandwidth-profile_peak-burst-size_peak-burst-size_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/schedule/": {
            "post": {
                "summary": "Create schedule by ID",
                "description": "Create operation of resource: schedule",
                "operationId": "create_context_connectivity-service_schedule_schedule_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "schedule",
                        "schema": {
                            "$ref": "#/definitions/time-range"
                        },
                        "description": "schedulebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve schedule",
                "description": "Retrieve operation of resource: schedule",
                "operationId": "retrieve_context_connectivity-service_schedule_schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/time-range"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update schedule by ID",
                "description": "Update operation of resource: schedule",
                "operationId": "update_context_connectivity-service_schedule_schedule_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "schedule",
                        "schema": {
                            "$ref": "#/definitions/time-range"
                        },
                        "description": "schedulebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete schedule by ID",
                "description": "Delete operation of resource: schedule",
                "operationId": "delete_context_connectivity-service_schedule_schedule_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/cost-characteristic/": {
            "get": {
                "summary": "Retrieve cost-characteristic",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_connectivity-service_cost-characteristic_cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connectivity-service/{uuid}/cost-characteristic/{cost_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/cost-characteristic/{cost_name}/": {
            "post": {
                "summary": "Create cost-characteristic by ID",
                "description": "Create operation of resource: cost-characteristic",
                "operationId": "create_context_connectivity-service_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "cost-characteristic",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        },
                        "description": "cost-characteristicbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve cost-characteristic by ID",
                "description": "Retrieve operation of resource: cost-characteristic",
                "operationId": "retrieve_context_connectivity-service_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update cost-characteristic by ID",
                "description": "Update operation of resource: cost-characteristic",
                "operationId": "update_context_connectivity-service_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "cost-characteristic",
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        },
                        "description": "cost-characteristicbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete cost-characteristic by ID",
                "description": "Delete operation of resource: cost-characteristic",
                "operationId": "delete_context_connectivity-service_cost-characteristic_cost-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cost_name",
                        "description": "ID of cost_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/latency-characteristic/": {
            "get": {
                "summary": "Retrieve latency-characteristic",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_connectivity-service_latency-characteristic_latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connectivity-service/{uuid}/latency-characteristic/{traffic_property_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/latency-characteristic/{traffic_property_name}/": {
            "post": {
                "summary": "Create latency-characteristic by ID",
                "description": "Create operation of resource: latency-characteristic",
                "operationId": "create_context_connectivity-service_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "latency-characteristic",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        },
                        "description": "latency-characteristicbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve latency-characteristic by ID",
                "description": "Retrieve operation of resource: latency-characteristic",
                "operationId": "retrieve_context_connectivity-service_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update latency-characteristic by ID",
                "description": "Update operation of resource: latency-characteristic",
                "operationId": "update_context_connectivity-service_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "latency-characteristic",
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        },
                        "description": "latency-characteristicbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete latency-characteristic by ID",
                "description": "Delete operation of resource: latency-characteristic",
                "operationId": "delete_context_connectivity-service_latency-characteristic_latency-characteristic_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "traffic_property_name",
                        "description": "ID of traffic_property_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connectivity-service/{uuid}/resilience-type/": {
            "post": {
                "summary": "Create resilience-type by ID",
                "description": "Create operation of resource: resilience-type",
                "operationId": "create_context_connectivity-service_resilience-type_resilience-type_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "resilience-type",
                        "schema": {
                            "$ref": "#/definitions/resilience-type"
                        },
                        "description": "resilience-typebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve resilience-type",
                "description": "Retrieve operation of resource: resilience-type",
                "operationId": "retrieve_context_connectivity-service_resilience-type_resilience-type",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/resilience-type"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "put": {
                "summary": "Update resilience-type by ID",
                "description": "Update operation of resource: resilience-type",
                "operationId": "update_context_connectivity-service_resilience-type_resilience-type_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "resilience-type",
                        "schema": {
                            "$ref": "#/definitions/resilience-type"
                        },
                        "description": "resilience-typebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete resilience-type by ID",
                "description": "Delete operation of resource: resilience-type",
                "operationId": "delete_context_connectivity-service_resilience-type_resilience-type_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/": {
            "get": {
                "summary": "Retrieve connection",
                "description": "Retrieve operation of resource: connection",
                "operationId": "retrieve_context_connection_connection",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/": {
            "get": {
                "summary": "Retrieve connection by ID",
                "description": "Retrieve operation of resource: connection",
                "operationId": "retrieve_context_connection_connection_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/connection"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/route/": {
            "get": {
                "summary": "Retrieve route",
                "description": "Retrieve operation of resource: route",
                "operationId": "retrieve_context_connection_route_route",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/route/{local_id}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/route/{local_id}/": {
            "get": {
                "summary": "Retrieve route by ID",
                "description": "Retrieve operation of resource: route",
                "operationId": "retrieve_context_connection_route_route_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/route"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/route/{local_id}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_route_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/route/{local_id}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/route/{local_id}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_route_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/": {
            "get": {
                "summary": "Retrieve switch-control",
                "description": "Retrieve operation of resource: switch-control",
                "operationId": "retrieve_context_connection_switch-control_switch-control",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/switch-control/{switch_control_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/": {
            "get": {
                "summary": "Retrieve switch-control by ID",
                "description": "Retrieve operation of resource: switch-control",
                "operationId": "retrieve_context_connection_switch-control_switch-control_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/switch-control"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/switch/": {
            "get": {
                "summary": "Retrieve switch",
                "description": "Retrieve operation of resource: switch",
                "operationId": "retrieve_context_connection_switch-control_switch_switch",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/switch-control/{switch_control_uuid}/switch/{local_id}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/switch/{local_id}/": {
            "get": {
                "summary": "Retrieve switch by ID",
                "description": "Retrieve operation of resource: switch",
                "operationId": "retrieve_context_connection_switch-control_switch_switch_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/switch"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/switch/{local_id}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_switch-control_switch_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/switch-control/{switch_control_uuid}/switch/{local_id}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/switch/{local_id}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_switch-control_switch_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "local_id",
                        "description": "ID of local_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_switch-control_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/switch-control/{switch_control_uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_switch-control_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/switch-control/{switch_control_uuid}/resilience-type/": {
            "get": {
                "summary": "Retrieve resilience-type",
                "description": "Retrieve operation of resource: resilience-type",
                "operationId": "retrieve_context_connection_switch-control_resilience-type_resilience-type",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "switch_control_uuid",
                        "description": "ID of switch_control_uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/resilience-type"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_name_name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/connection/{uuid}/name/{value_name}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/context/connection/{uuid}/name/{value_name}/": {
            "get": {
                "summary": "Retrieve name by ID",
                "description": "Retrieve operation of resource: name",
                "operationId": "retrieve_context_connection_name_name_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value_name",
                        "description": "ID of value_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-service-interface-point-details/": {
            "post": {
                "summary": "Create get-service-interface-point-details by ID",
                "description": "Create operation of resource: get-service-interface-point-details",
                "operationId": "create_get-service-interface-point-details_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "get-service-interface-point-details",
                        "schema": {
                            "$ref": "#/definitions/get-service-interface-point-detailsRPC_input_schema"
                        },
                        "description": "get-service-interface-point-detailsbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-service-interface-point-detailsRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-service-interface-point-list/": {
            "post": {
                "summary": "Create get-service-interface-point-list by ID",
                "description": "Create operation of resource: get-service-interface-point-list",
                "operationId": "create_get-service-interface-point-list_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-service-interface-point-listRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/update-service-interface-point/": {
            "post": {
                "summary": "Create update-service-interface-point by ID",
                "description": "Create operation of resource: update-service-interface-point",
                "operationId": "create_update-service-interface-point_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "update-service-interface-point",
                        "schema": {
                            "$ref": "#/definitions/update-service-interface-pointRPC_input_schema"
                        },
                        "description": "update-service-interface-pointbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-topology-details/": {
            "post": {
                "summary": "Create get-topology-details by ID",
                "description": "Create operation of resource: get-topology-details",
                "operationId": "create_get-topology-details_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "get-topology-details",
                        "schema": {
                            "$ref": "#/definitions/get-topology-detailsRPC_input_schema"
                        },
                        "description": "get-topology-detailsbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-topology-detailsRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-node-details/": {
            "post": {
                "summary": "Create get-node-details by ID",
                "description": "Create operation of resource: get-node-details",
                "operationId": "create_get-node-details_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "get-node-details",
                        "schema": {
                            "$ref": "#/definitions/get-node-detailsRPC_input_schema"
                        },
                        "description": "get-node-detailsbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-node-detailsRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-node-edge-point-details/": {
            "post": {
                "summary": "Create get-node-edge-point-details by ID",
                "description": "Create operation of resource: get-node-edge-point-details",
                "operationId": "create_get-node-edge-point-details_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "get-node-edge-point-details",
                        "schema": {
                            "$ref": "#/definitions/get-node-edge-point-detailsRPC_input_schema"
                        },
                        "description": "get-node-edge-point-detailsbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-node-edge-point-detailsRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-link-details/": {
            "post": {
                "summary": "Create get-link-details by ID",
                "description": "Create operation of resource: get-link-details",
                "operationId": "create_get-link-details_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "get-link-details",
                        "schema": {
                            "$ref": "#/definitions/get-link-detailsRPC_input_schema"
                        },
                        "description": "get-link-detailsbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-link-detailsRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-topology-list/": {
            "post": {
                "summary": "Create get-topology-list by ID",
                "description": "Create operation of resource: get-topology-list",
                "operationId": "create_get-topology-list_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-topology-listRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-connection-details/": {
            "post": {
                "summary": "Create get-connection-details by ID",
                "description": "Create operation of resource: get-connection-details",
                "operationId": "create_get-connection-details_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "get-connection-details",
                        "schema": {
                            "$ref": "#/definitions/get-connection-detailsRPC_input_schema"
                        },
                        "description": "get-connection-detailsbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-connection-detailsRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-connectivity-service-list/": {
            "post": {
                "summary": "Create get-connectivity-service-list by ID",
                "description": "Create operation of resource: get-connectivity-service-list",
                "operationId": "create_get-connectivity-service-list_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-connectivity-service-listRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/get-connectivity-service-details/": {
            "post": {
                "summary": "Create get-connectivity-service-details by ID",
                "description": "Create operation of resource: get-connectivity-service-details",
                "operationId": "create_get-connectivity-service-details_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "get-connectivity-service-details",
                        "schema": {
                            "$ref": "#/definitions/get-connectivity-service-detailsRPC_input_schema"
                        },
                        "description": "get-connectivity-service-detailsbody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get-connectivity-service-detailsRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/create-connectivity-service/": {
            "post": {
                "summary": "Create create-connectivity-service by ID",
                "description": "Create operation of resource: create-connectivity-service",
                "operationId": "create_create-connectivity-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "create-connectivity-service",
                        "schema": {
                            "$ref": "#/definitions/create-connectivity-serviceRPC_input_schema"
                        },
                        "description": "create-connectivity-servicebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create-connectivity-serviceRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/update-connectivity-service/": {
            "post": {
                "summary": "Create update-connectivity-service by ID",
                "description": "Create operation of resource: update-connectivity-service",
                "operationId": "create_update-connectivity-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "update-connectivity-service",
                        "schema": {
                            "$ref": "#/definitions/update-connectivity-serviceRPC_input_schema"
                        },
                        "description": "update-connectivity-servicebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update-connectivity-serviceRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/operations/delete-connectivity-service/": {
            "post": {
                "summary": "Create delete-connectivity-service by ID",
                "description": "Create operation of resource: delete-connectivity-service",
                "operationId": "create_delete-connectivity-service_by_id",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "delete-connectivity-service",
                        "schema": {
                            "$ref": "#/definitions/delete-connectivity-serviceRPC_input_schema"
                        },
                        "description": "delete-connectivity-servicebody object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete-connectivity-serviceRPC_output_schema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "eth-ctp-pac": {
            "properties": {
                "auxiliary-function-position-sequence": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "This attribute indicates the positions (i.e., the relative order) of all the MEP, MIP, and TCS objects which are associated with the CTP."
                    }
                },
                "vlan-config": {
                    "type": "string",
                    "description": "This attribute models the ETHx/ETH-m_A_So_MI_Vlan_Config information defined in G.8021.\nrange of type : -1, 0, 1..4094"
                },
                "csf-rdi-fdi-enable": {
                    "type": "boolean",
                    "description": "This attribute models the MI_CSFrdifdiEnable information defined in G.8021."
                },
                "csf-report": {
                    "type": "boolean",
                    "description": "This attribute models the MI_CSF_Reported information defined in G.8021.\nrange of type : true, false"
                },
                "filter-config-snk": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "This attribute models the FilteConfig MI defined in 8.3/G.8021. It indicates the configured filter action for each of the 33 group MAC addresses for control frames. The 33 MAC addresses are:\n01-80-C2-00-00-10, \n01-80-C2-00-00-00 to 01-80-C2-00-00-0F, and \n01-80-C2-00-00-20 to 01-80-C2-00-00-2F.\nThe filter action is Pass or Block. \nIf the destination address of the incoming ETH_CI_D matches one of the above addresses, the filter process shall perform the corresponding configured filter action. \nIf none of the above addresses match, the ETH_CI_D is passed."
                    }
                },
                "mac-length": {
                    "type": "string",
                    "description": "This attribute models the MAC_Lenght MI defined in 8.6/G.8021 for the MAC Length Check process. It indicates the allowed maximum frame length in bytes.\nrange of type : 1518, 1522, 2000"
                },
                "filter-config": {
                    "description": "This attribute models the FilterConfig MI defined in section 8.3/G.8021. It indicates the configured filter action for each of the 33 group MAC addresses for control frames. The 33 MAC addresses are:\n- All bridges address: 01-80-C2-00-00-10,\n- Reserved addresses: 01-80-C2-00-00-00 to 01-80-C2-00-00-0F,\n- GARP Application addresses: 01-80-C2-00-00-20 to 01-80-C2-00-00-2F.\nThe filter action is Pass or Block. \nIf the destination address of the incoming ETH_CI_D matches one of the above addresses, the filter process shall perform the corresponding configured filter action. \nIf none of the above addresses match, the ETH_CI_D is passed.",
                    "$ref": "#/definitions/control-frame-filter"
                },
                "is-ssf-reported": {
                    "type": "boolean",
                    "description": "This attribute provisions whether the SSF defect should be reported as fault cause or not.\nIt models the ETH-LAG_FT_Sk_MI_SSF_Reported defined in G.8021."
                },
                "pll-thr": {
                    "type": "string",
                    "description": "This attribute provisions the threshold for the number of active ports. If the number of active ports is more than zero but less than the provisioned threshold, a cPLL (Partial Link Loss) is raised. See section 9.7.1.2 of G.8021.\nrange of type : 0..number of ports"
                },
                "actor-oper-key": {
                    "type": "string",
                    "description": "See 802.1AX:\nThe current operational value of the Key for the Aggregator. The administrative Key value may differ from the operational Key value for the reasons discussed in 5.6.2.\nThe meaning of particular Key values is of local significance.\nrange of type : 16 bit"
                },
                "actor-system-id": {
                    "type": "string",
                    "description": "See 802.1AX:\nA MAC address used as a unique identifier for the System that contains this Aggregator."
                },
                "actor-system-priority": {
                    "type": "string",
                    "description": "See 802.1AX:\nIndicating the priority associated with the Actor\u2019s System ID.\nrange of type : 2-octet"
                },
                "collector-max-delay": {
                    "type": "string",
                    "description": "See 802.1AX:\nThe value of this attribute defines the maximum delay, in tens of microseconds, that may be imposed by the Frame Collector between receiving a frame from an Aggregator Parser, and either delivering the frame to its MAC Client or discarding the frame (see IEEE 802.1AX clause 5.2.3.1.1).\nrange of type : 16-bit"
                },
                "data-rate": {
                    "type": "string",
                    "description": "See 802.1AX:\nThe current data rate, in bits per second, of the aggregate link. The value is calculated as N times the data rate of a single link in the aggregation, where N is the number of active links."
                },
                "partner-oper-key": {
                    "type": "string",
                    "description": "See 802.1AX:\nThe current operational value of the Key for the Aggregator\u2019s current protocol Partner. If the aggregation is manually configured, this Key value will be a value assigned by the local System.\nrange of type : 16-bit"
                },
                "partner-system-id": {
                    "type": "string",
                    "description": "See 802.1AX:\nA MAC address consisting of the unique identifier for the current protocol Partner of this Aggregator. A value of zero indicates that there is no known Partner. If the aggregation is manually configured, this System ID value will be a value assigned by the local System."
                },
                "partner-system-priority": {
                    "type": "string",
                    "description": "See 802.1AX:\nIndicates the priority associated with the Partner\u2019s System ID. If the aggregation is manually configured, this System Priority value will be a value assigned by the local System.\nrange of type : 2-octet"
                },
                "csf-config": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED",
                        "ENABLED_WITH_RDI_FDI",
                        "ENABLED_WITH_RDI_FDI_DCI",
                        "ENABLED_WITH_DCI"
                    ],
                    "description": "This attribute models the combination of all CSF related MI signals (MI_CSF_Enable, MI_CSFrdifdi_Enable, MI_CSFdci_Enable) as defined in G.8021.\nrange of type : true, false"
                },
                "traffic-shaping": {
                    "$ref": "#/definitions/traffic-shaping-pac"
                },
                "traffic-conditioning": {
                    "$ref": "#/definitions/traffic-conditioning-pac"
                }
            }
        },
        "eth-connection-end-point-spec": {
            "properties": {
                "eth-term": {
                    "$ref": "#/definitions/eth-termination-pac"
                },
                "eth-ctp": {
                    "$ref": "#/definitions/eth-ctp-pac"
                }
            }
        },
        "eth-termination-pac": {
            "description": "This object class models the Ethernet Flow Termination function located at a layer boundary.",
            "properties": {
                "priority-regenerate": {
                    "description": "This attribute models the ETHx/ETH-m _A_Sk_MI_P_Regenerate information defined in G.8021.",
                    "$ref": "#/definitions/priority-mapping"
                },
                "ether-type": {
                    "type": "string",
                    "enum": [
                        "C_Tag",
                        "S_Tag",
                        "I_Tag"
                    ],
                    "description": "This attribute models the ETHx/ETH-m _A_Sk_MI_Etype information defined in G.8021."
                },
                "filter-config-1": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "This attribute models the ETHx/ETH-m_A_Sk_MI_Filter_Config information defined in G.8021.\nIt indicates the configured filter action for each of the 33 group MAC addresses for control frames.\nThe 33 MAC addresses are:\n01-80-C2-00-00-10, \n01-80-C2-00-00-00 to 01-80-C2-00-00-0F, and \n01-80-C2-00-00-20 to 01-80-C2-00-00-2F.\nThe filter action is Pass or Block. \nIf the destination address of the incoming ETH_CI_D matches one of the above addresses, the filter process shall perform the corresponding configured filter action. \nIf none of the above addresses match, the ETH_CI_D is passed.\nrange of type : MacAddress: \n01-80-C2-00-00-10, \n01-80-C2-00-00-00 to \n01-80-C2-00-00-0F, and \n01-80-C2-00-00-20 to \n01-80-C2-00-00-2F;\nActionEnum:\nPASS, BLOCK"
                    }
                },
                "frametype-config": {
                    "type": "string",
                    "enum": [
                        "ADMIT_ONLY_VLAN_TAGGED_FRAMES",
                        "ADMIT_ONLY_UNTAGGED_AND_PRIORITY_TAGGED_FRAMES",
                        "ADMIT_ALL_FRAMES"
                    ],
                    "description": "This attribute models the ETHx/ETH-m_A_Sk_MI_Frametype_Config information defined in G.8021.\nrange of type : see Enumeration"
                },
                "port-vid": {
                    "type": "string",
                    "description": "This attribute models the ETHx/ETH-m _A_Sk_MI_PVID information defined in G.8021."
                },
                "priority-code-point-config": {
                    "type": "string",
                    "enum": [
                        "8P0D",
                        "7P1D",
                        "6P2D",
                        "5P3D",
                        "DEI"
                    ],
                    "description": "This attribute models the ETHx/ETH-m _A_Sk_MI_PCP_Config information defined in G.8021.\nrange of type : see Enumeration"
                }
            }
        },
        "ety-termination-pac": {
            "properties": {
                "is-fts-enabled": {
                    "type": "boolean",
                    "description": "This attribute indicates whether Forced Transmitter Shutdown (FTS) is enabled or not. It models the ETYn_TT_So_MI_FTSEnable information."
                },
                "is-tx-pause-enabled": {
                    "type": "boolean",
                    "description": "This attribute identifies whether the Transmit Pause process is enabled or not. It models the MI_TxPauseEnable defined in G.8021."
                },
                "phy-type": {
                    "type": "string",
                    "enum": [
                        "OTHER",
                        "UNKNOWN",
                        "NONE",
                        "2BASE_TL",
                        "10MBIT_S",
                        "10PASS_TS",
                        "100BASE_T4",
                        "100BASE_X",
                        "100BASE_T2",
                        "1000BASE_X",
                        "1000BASE_T",
                        "10GBASE-X",
                        "10GBASE_R",
                        "10GBASE_W"
                    ],
                    "description": "This attribute identifies the PHY type of the ETY trail termination. See IEEE 802.3 clause 30.3.2.1.2."
                },
                "phy-type-list": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "OTHER",
                            "UNKNOWN",
                            "NONE",
                            "2BASE_TL",
                            "10MBIT_S",
                            "10PASS_TS",
                            "100BASE_T4",
                            "100BASE_X",
                            "100BASE_T2",
                            "1000BASE_X",
                            "1000BASE_T",
                            "10GBASE-X",
                            "10GBASE_R",
                            "10GBASE_W"
                        ],
                        "description": "This attribute identifies the possible PHY types that could be supported at the ETY trail termination. See IEEE 802.3 clause 30.3.2.1.3."
                    }
                }
            }
        },
        "traffic-conditioning-pac": {
            "description": "This object class models the ETH traffic conditioning function as defined in G.8021.\nBasic attributes: codirectional, condConfigList, prioConfigList",
            "properties": {
                "prio-config-list": {
                    "description": "This attribute indicates the Priority Splitter function for the mapping of the Ethernet frame priority (ETH_CI_P) values to the output queue.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/priority-configuration"
                    }
                },
                "cond-config-list": {
                    "description": "This attribute indicates for the conditioner process the conditioning parameters:\n- Queue ID: Indicates the Queue ID\n- Committed Information Rate (CIR): number of bits per second\n- Committed Burst Size (CBS): number of bytes\n- Excess Information Rate (EIR): number of bits per second\n- Excess Burst Size (EBS): number of bytes\n- Coupling flag (CF): 0 or 1\n- Color mode (CM): color-blind and color-aware.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/traffic-conditioning-configuration"
                    }
                },
                "codirectional": {
                    "type": "boolean",
                    "description": "This attribute indicates the direction of the conditioner. The value of true means that the conditioner (modeled as a TCS Sink according to G.8021) is associated with the sink part of the containing CTP. The value of false means that the conditioner (modeled as a TCS Sink according to G.8021) is associated with the source part of the containing CTP."
                }
            }
        },
        "traffic-shaping-pac": {
            "description": "This object class models the ETH traffic shaping function as defined in G.8021.\nBasic attribute: codirectional, prioConfigList, queueConfigList, schedConfig",
            "properties": {
                "prio-config-list": {
                    "description": "This attribute configures the Priority Splitter function for the mapping of the Ethernet frame priority (ETH_CI_P) values to the output queue.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/priority-configuration"
                    }
                },
                "queue-config-list": {
                    "description": "This attribute configures the Queue depth and Dropping threshold parameters of the Queue process. The Queue depth sets the maximum size of the queue in bytes. An incoming ETH_CI traffic unit is dropped if there is insufficient space in the queue to hold the whole unit. The Dropping threshold sets the threshold of the queue. If the queue is filled beyond this threshold, incoming ETH_CI traffic units accompanied by the ETH_CI_DE signal set are dropped.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/queue-configuration"
                    }
                },
                "sched-config": {
                    "type": "string",
                    "description": "This attribute configures the scheduler process. The value of this attribute is for further study because it is for further study in G.8021.\nScheduler is a pointer to a Scheduler object, which is to be defined in the future (because in G.8021, this is FFS).\nNote that the only significance of the GTCS function defined in G.8021 is the use of a common scheduler for shaping. Given that, G.8052 models the common scheduler feature by having a common value for this attribute."
                },
                "codirectional": {
                    "type": "boolean",
                    "description": "This attribute indicates the direction of the shaping function. The value of true means that the shaping (modeled as a TCS Source according to G.8021) is associated with the source part of the containing CTP. The value of false means that the shaping (modeled as a TCS Source according to G.8021) is associated with the sink part of the containing CTP."
                }
            }
        },
        "eth-node-edge-point-spec": {
            "properties": {
                "ety-term": {
                    "$ref": "#/definitions/ety-termination-pac"
                }
            }
        },
        "priority-configuration": {
            "properties": {
                "priority": {
                    "type": "string"
                },
                "queue-id": {
                    "type": "string"
                }
            }
        },
        "queue-configuration": {
            "properties": {
                "queue-id": {
                    "type": "string",
                    "description": "This attribute indicates the queue id."
                },
                "queue-depth": {
                    "type": "string",
                    "description": "This attribute defines the depth of the queue in bytes."
                },
                "queue-threshold": {
                    "type": "string",
                    "description": "This attribute defines the threshold of the queue in bytes."
                }
            }
        },
        "traffic-conditioning-configuration": {
            "properties": {
                "cir": {
                    "type": "string",
                    "description": "This attribute indicates the Committed Information Rate in bits/s."
                },
                "cbs": {
                    "type": "string",
                    "description": "This attribute indicates the Committed Burst Size in bytes."
                },
                "eir": {
                    "type": "string",
                    "description": "This attribute indicates the Excess Information Rate in bits/s."
                },
                "ebs": {
                    "type": "string",
                    "description": "This attribute indicates the Excess Burst Size in bytes."
                },
                "coupling-flag": {
                    "type": "boolean",
                    "description": "This attribute indicates the coupling flag."
                },
                "colour-mode": {
                    "type": "string",
                    "enum": [
                        "COLOUR_BLIND",
                        "COLOUR_AWARE"
                    ],
                    "description": "This attribute indicates the colour mode."
                },
                "queue-id": {
                    "type": "string",
                    "description": "This attribute indicates the queue id."
                }
            }
        },
        "priority-mapping": {
            "description": "This data type provides the priority mapping done in the 'P Regenerate' process defined in G.8021.",
            "properties": {
                "priority-0": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 0."
                },
                "priority-1": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 1."
                },
                "priority-2": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 2."
                },
                "priority-3": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 3."
                },
                "priority-4": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 4."
                },
                "priority-5": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 5."
                },
                "priority-6": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 6."
                },
                "priority-7": {
                    "type": "string",
                    "description": "This attribute defines the new priority value for the old priority value 7."
                }
            }
        },
        "address-tuple": {
            "description": "This data type contains an address tuple consisting of a MAC address and a corresponding port list.",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "This attribute contains the MAC address of the address tuple."
                },
                "port-list": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "This attribute contains the ports associated to the MAC address in the address tuple."
                    }
                }
            }
        },
        "control-frame-filter": {
            "description": "This data type identifies the filter action for each of the 33 group MAC addresses (control frames).\nValue 'false' means block: The frame is discarded by the filter process.\nValue 'true' means pass: The frame is passed unchanged through the filter process.",
            "properties": {
                "c-2-00-00-10": {
                    "type": "boolean",
                    "description": "This attribute identifies the 'All LANs Bridge Management Group Address'."
                },
                "c-2-00-00-00": {
                    "type": "boolean",
                    "description": "This attribute identifies the STP/RSTP/MSTP protocol address."
                },
                "c-2-00-00-01": {
                    "type": "boolean",
                    "description": "This attribute identifies the IEEE MAC-specific Control Protocols group address (PAUSE protocol)."
                },
                "c-2-00-00-02": {
                    "type": "boolean",
                    "description": "This attribute identifies the IEEE 802.3 Slow_Protocols_Multicast address (LACP/LAMP or Link OAM protocols)."
                },
                "c-2-00-00-03": {
                    "type": "boolean",
                    "description": "This attribute identifies the Nearest non-TPMR Bridge group address (Port Authentication protocol)."
                },
                "c-2-00-00-04": {
                    "type": "boolean",
                    "description": "This attribute identifies the IEEE MAC-specific Control Protocols group address."
                },
                "c-2-00-00-05": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-06": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-07": {
                    "type": "boolean",
                    "description": "This attribute identifies the Metro Ethernet Forum E-LMI protocol group address."
                },
                "c-2-00-00-08": {
                    "type": "boolean",
                    "description": "This attribute identifies the Provider Bridge Group address."
                },
                "c-2-00-00-09": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-0-a": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-0-b": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-0-c": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-0-d": {
                    "type": "boolean",
                    "description": "This attribute identifies the Provider Bridge MVRP address."
                },
                "c-2-00-00-0-e": {
                    "type": "boolean",
                    "description": "This attribute identifies the Individual LAN Scope group address, Nearest Bridge group address (LLDP protocol)."
                },
                "c-2-00-00-0-f": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-20": {
                    "type": "boolean",
                    "description": "This attribute identifies the Customer and Provider Bridge MMRP address."
                },
                "c-2-00-00-21": {
                    "type": "boolean",
                    "description": "This attribute identifies the Customer Bridge MVRP address."
                },
                "c-2-00-00-22": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-23": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-24": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-25": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-26": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-27": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-28": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-29": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-2-a": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-2-b": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-2-c": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-2-d": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-2-e": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                },
                "c-2-00-00-2-f": {
                    "type": "boolean",
                    "description": "Reserved for future standardization."
                }
            }
        },
        "bandwidth-report": {
            "description": "Data type for the bandwidth report.",
            "properties": {
                "source-mac-address": {
                    "type": "string",
                    "description": "The sourceMacAddress is the address from the far end."
                },
                "port-id": {
                    "type": "string",
                    "description": "This attribute returns the far end port identifier."
                },
                "nominal-bandwidth": {
                    "type": "string",
                    "description": "This attribute returns the configured bandwidth"
                },
                "current-bandwidth": {
                    "type": "string",
                    "description": "This attribute returns the current bandwidth."
                }
            }
        },
        "admin-state-pac": {
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects.",
            "properties": {
                "administrative-state": {
                    "type": "string",
                    "enum": [
                        "LOCKED",
                        "UNLOCKED"
                    ]
                },
                "operational-state": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ]
                },
                "lifecycle-state": {
                    "type": "string",
                    "enum": [
                        "PLANNED",
                        "POTENTIAL_AVAILABLE",
                        "POTENTIAL_BUSY",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ]
                }
            }
        },
        "global-class": {
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. ",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
                },
                "name": {
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "x-key": "value-name"
                }
            }
        },
        "lifecycle-state-pac": {
            "description": "Provides state attributes for an entity that has lifeccycle aspects only.",
            "properties": {
                "lifecycle-state": {
                    "type": "string",
                    "enum": [
                        "PLANNED",
                        "POTENTIAL_AVAILABLE",
                        "POTENTIAL_BUSY",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ]
                }
            }
        },
        "local-class": {
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. ",
            "properties": {
                "local-id": {
                    "type": "string"
                },
                "name": {
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "x-key": "value-name"
                }
            }
        },
        "operational-state-pac": {
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects.",
            "properties": {
                "operational-state": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ]
                },
                "lifecycle-state": {
                    "type": "string",
                    "enum": [
                        "PLANNED",
                        "POTENTIAL_AVAILABLE",
                        "POTENTIAL_BUSY",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ]
                }
            }
        },
        "tapi-context": {
            "allOf": [
                {
                    "$ref": "#/definitions/global-class"
                },
                {
                    "$ref": "#/definitions/topology-context"
                },
                {
                    "$ref": "#/definitions/path-computation-context"
                },
                {
                    "$ref": "#/definitions/connectivity-context"
                },
                {
                    "properties": {
                        "service-interface-point": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service-interface-point"
                            },
                            "x-key": "uuid"
                        }
                    }
                }
            ],
            "description": "The Network Control Domain (NCD) object class represents the scope of control that a particular SDN controller has with respect to a particular network, (i.e., encompassing a designated set of interconnected (virtual) network elements)."
        },
        "resource-spec": {
            "$ref": "#/definitions/global-class"
        },
        "service-spec": {
            "$ref": "#/definitions/global-class"
        },
        "service-interface-point": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/admin-state-pac"
                },
                {
                    "$ref": "#/definitions/capacity-pac"
                },
                {
                    "properties": {
                        "layer-protocol-name": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "OTSiA",
                                    "OCH",
                                    "OTU",
                                    "ODU",
                                    "ETH",
                                    "ETY",
                                    "DSR"
                                ],
                                "description": "Usage of layerProtocolName [>1]  in the ServiceInterfacePoint should be considered experimental"
                            }
                        }
                    }
                }
            ],
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms."
        },
        "capacity-pac": {
            "description": "The TopologicalEntity derives capacity from the underlying realization. \nA TopologicalEntity may be an abstraction and virtualization of a subset of the underlying capability offered in a view or may be directly reflecting the underlying realization.\nA TopologicalEntity may be directly used in the view or may be assigned to another view for use.\nThe clients supported by a multi-layer TopologicalEntity may interact such that the resources used by one client may impact those available to another. This is derived from the LTP spec details.\nRepresents the capacity available to user (client) along with client interaction and usage. \nA TopologicalEntity may reflect one or more client protocols and one or more members for each profile.",
            "properties": {
                "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                    "$ref": "#/definitions/capacity"
                },
                "available-capacity": {
                    "description": "Capacity available to be assigned.",
                    "$ref": "#/definitions/capacity"
                }
            }
        },
        "termination-pac": {
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. ",
            "properties": {
                "termination-direction": {
                    "type": "string",
                    "enum": [
                        "BIDIRECTIONAL",
                        "SINK",
                        "SOURCE",
                        "UNDEFINED_OR_UNKNOWN"
                    ],
                    "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows"
                },
                "termination-state": {
                    "type": "string",
                    "enum": [
                        "LP_CAN_NEVER_TERMINATE",
                        "LT_NOT_TERMINATED",
                        "TERMINATED_SERVER_TO_CLIENT_FLOW",
                        "TERMINATED_CLIENT_TO_SERVER_FLOW",
                        "TERMINATED_BIDIRECTIONAL",
                        "LT_PERMENANTLY_TERMINATED",
                        "TERMINATION_STATE_UNKNOWN"
                    ],
                    "description": "Indicates whether the layer is terminated and if so how."
                }
            }
        },
        "name-and-value": {
            "description": "A scoped name-value pair",
            "properties": {
                "value-name": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                },
                "value": {
                    "type": "string",
                    "description": "The value"
                }
            }
        },
        "capacity": {
            "description": "Information on capacity of a particular TopologicalEntity.",
            "properties": {
                "total-size": {
                    "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate.",
                    "$ref": "#/definitions/capacity-value"
                },
                "bandwidth-profile": {
                    "$ref": "#/definitions/bandwidth-profile"
                }
            }
        },
        "bandwidth-profile": {
            "properties": {
                "bw-profile-type": {
                    "type": "string",
                    "enum": [
                        "MEF_10.x",
                        "RFC_2697",
                        "RFC_2698",
                        "RFC_4115"
                    ]
                },
                "committed-information-rate": {
                    "$ref": "#/definitions/capacity-value"
                },
                "committed-burst-size": {
                    "$ref": "#/definitions/capacity-value"
                },
                "peak-information-rate": {
                    "$ref": "#/definitions/capacity-value"
                },
                "peak-burst-size": {
                    "$ref": "#/definitions/capacity-value"
                },
                "color-aware": {
                    "type": "boolean"
                },
                "coupling-flag": {
                    "type": "boolean"
                }
            }
        },
        "capacity-value": {
            "description": "The Capacity (Bandwidth) values that are applicable for digital layers.",
            "properties": {
                "value": {
                    "type": "string"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS"
                    ]
                }
            }
        },
        "time-range": {
            "properties": {
                "end-time": {
                    "type": "string"
                },
                "start-time": {
                    "type": "string"
                }
            }
        },
        "link": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/admin-state-pac"
                },
                {
                    "$ref": "#/definitions/capacity-pac"
                },
                {
                    "$ref": "#/definitions/transfer-cost-pac"
                },
                {
                    "$ref": "#/definitions/transfer-integrity-pac"
                },
                {
                    "$ref": "#/definitions/transfer-timing-pac"
                },
                {
                    "$ref": "#/definitions/risk-parameter-pac"
                },
                {
                    "$ref": "#/definitions/validation-pac"
                },
                {
                    "$ref": "#/definitions/layer-protocol-transition-pac"
                },
                {
                    "properties": {
                        "node-edge-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid"
                            }
                        },
                        "layer-protocol-name": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "OTSiA",
                                    "OCH",
                                    "OTU",
                                    "ODU",
                                    "ETH",
                                    "ETY",
                                    "DSR"
                                ]
                            }
                        },
                        "direction": {
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "description": "The directionality of the Link. \nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). \nIs not present in more complex cases."
                        },
                        "resilience-type": {
                            "$ref": "#/definitions/resilience-type"
                        }
                    }
                }
            ],
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). "
        },
        "node": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/admin-state-pac"
                },
                {
                    "$ref": "#/definitions/capacity-pac"
                },
                {
                    "$ref": "#/definitions/transfer-cost-pac"
                },
                {
                    "$ref": "#/definitions/transfer-integrity-pac"
                },
                {
                    "$ref": "#/definitions/transfer-timing-pac"
                },
                {
                    "properties": {
                        "owned-node-edge-point": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/node-edge-point"
                            },
                            "x-key": "uuid"
                        },
                        "aggregated-node-edge-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid"
                            }
                        },
                        "node-rule-group": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/node-rule-group"
                            },
                            "x-key": "uuid"
                        },
                        "encap-topology": {
                            "type": "string",
                            "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:uuid"
                        },
                        "layer-protocol-name": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "OTSiA",
                                    "OCH",
                                    "OTU",
                                    "ODU",
                                    "ETH",
                                    "ETY",
                                    "DSR"
                                ]
                            }
                        }
                    }
                }
            ],
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). "
        },
        "topology": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "properties": {
                        "node": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/node"
                            },
                            "x-key": "uuid"
                        },
                        "link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/link"
                            },
                            "x-key": "uuid"
                        },
                        "layer-protocol-name": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "OTSiA",
                                    "OCH",
                                    "OTU",
                                    "ODU",
                                    "ETH",
                                    "ETY",
                                    "DSR"
                                ]
                            }
                        }
                    }
                }
            ],
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). "
        },
        "layer-protocol-transition-pac": {
            "description": "Relevant for a Link that is formed by abstracting one or more LTPs (in a stack) to focus on the flow and deemphasize the protocol transformation. \nThis abstraction is relevant when considering multi-layer routing. \nThe layer protocols of the LTP and the order of their application to the signal is still relevant and need to be accounted for. This is derived from the LTP spec details.\nThis Pac provides the relevant abstractions of the LTPs and provides the necessary association to the LTPs involved.\nLinks that included details in this Pac are often referred to as Transitional Links.",
            "properties": {
                "transitioned-layer-protocol-name": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role."
                    }
                }
            }
        },
        "node-edge-point": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/admin-state-pac"
                },
                {
                    "$ref": "#/definitions/termination-pac"
                },
                {
                    "$ref": "#/definitions/capacity-pac"
                },
                {
                    "$ref": "#/definitions/cep-list"
                },
                {
                    "$ref": "#/definitions/eth-node-edge-point-spec"
                },
                {
                    "properties": {
                        "layer-protocol-name": {
                            "type": "string",
                            "enum": [
                                "OTSiA",
                                "OCH",
                                "OTU",
                                "ODU",
                                "ETH",
                                "ETY",
                                "DSR"
                            ]
                        },
                        "aggregated-node-edge-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid"
                            }
                        },
                        "mapped-service-interface-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-common:service-interface-point/tapi-common:uuid",
                                "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental"
                            }
                        },
                        "link-port-direction": {
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "The orientation of defined flow at the LinkEnd."
                        },
                        "link-port-role": {
                            "type": "string",
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF",
                                "TRUNK",
                                "UNKNOWN"
                            ],
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. "
                        }
                    }
                }
            ],
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms."
        },
        "risk-parameter-pac": {
            "description": "The risk characteristics of a TopologicalEntity come directly from the underlying physical realization. \nThe risk characteristics propagate from the physical realization to the client and from the server layer to the client layer, this propagation may be modified by protection.\nA TopologicalEntity may suffer degradation or failure as a result of a problem in a part of the underlying realization.\nThe realization can be partitioned into segments which have some relevant common failure modes.\nThere is a risk of failure/degradation of each segment of the underlying realization.\nEach segment is a part of a larger physical/geographical unit that behaves as one with respect to failure (i.e. a failure will have a high probability of impacting the whole unit (e.g. all cables in the same duct).\nDisruptions to that larger physical/geographical unit will impact (cause failure/errors to) all TopologicalEntities that use any part of that larger physical/geographical entity.\nAny TopologicalEntity that uses any part of that larger physical/geographical unit will suffer impact and hence each TopologicalEntity shares risk.\nThe identifier of each physical/geographical unit that is involved in the realization of each segment of a Topological entity can be listed in the RiskParameter_Pac of that TopologicalEntity.\nA segment has one or more risk characteristic.\nShared risk between two TopologicalEntities compromises the integrity of any solution that use one of those TopologicalEntity as a backup for the other.\nWhere two TopologicalEntities have a common risk characteristic they have an elevated probability of failing simultaneously compared to two TopologicalEntities that do not share risk characteristics.",
            "properties": {
                "risk-characteristic": {
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/risk-characteristic"
                    },
                    "x-key": "risk-characteristic-name"
                }
            }
        },
        "transfer-cost-pac": {
            "description": "The cost characteristics of a TopologicalEntity not necessarily correlated to the cost of the underlying physical realization. \nThey may be quite specific to the individual TopologicalEntity e.g. opportunity cost. Relates to layer capacity\nThere may be many perspectives from which cost may be considered  for a particular TopologicalEntity and hence many specific costs and potentially cost algorithms. \nUsing an entity will incur a cost. ",
            "properties": {
                "cost-characteristic": {
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cost-characteristic"
                    },
                    "x-key": "cost-name"
                }
            }
        },
        "transfer-integrity-pac": {
            "description": "Transfer intergrity characteristic covers expected/specified/acceptable characteristic of degradation of the transfered signal.\nIt includes all aspects of possible degradation of signal content as well as any damage of any form to the total TopologicalEntity and to the carried signals.\nNote that the statement is of total impact to the TopologicalEntity so any partial usage of the TopologicalEntity (e.g. a signal that does not use full capacity) will only suffer its portion of the impact.",
            "properties": {
                "error-characteristic": {
                    "type": "string",
                    "description": "Describes the degree to which the signal propagated can be errored. \nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded."
                },
                "loss-characteristic": {
                    "type": "string",
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips)."
                },
                "repeat-delivery-characteristic": {
                    "type": "string",
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example). \nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay."
                },
                "delivery-order-characteristic": {
                    "type": "string",
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order."
                },
                "unavailable-time-characteristic": {
                    "type": "string",
                    "description": "Describes the duration for which there may be no valid signal propagated."
                },
                "server-integrity-process-characteristic": {
                    "type": "string",
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity."
                }
            }
        },
        "transfer-timing-pac": {
            "description": "A TopologicalEntity will suffer effects from the underlying physical realization related to the timing of the information passed by the TopologicalEntity.",
            "properties": {
                "latency-characteristic": {
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/latency-characteristic"
                    },
                    "x-key": "traffic-property-name"
                }
            }
        },
        "validation-pac": {
            "description": "Validation covers the various adjacenct discovery and reachability verification protocols. Also may cover Information source and degree of integrity.",
            "properties": {
                "validation-mechanism": {
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/validation-mechanism"
                    },
                    "x-key": "validation-mechanism"
                }
            }
        },
        "network-topology-service": {
            "allOf": [
                {
                    "$ref": "#/definitions/service-spec"
                },
                {
                    "properties": {
                        "topology": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:uuid"
                            }
                        }
                    }
                }
            ]
        },
        "topology-context": {
            "properties": {
                "nw-topology-service": {
                    "$ref": "#/definitions/network-topology-service"
                },
                "topology": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/topology"
                    },
                    "x-key": "uuid"
                }
            }
        },
        "inter-rule-group": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/capacity-pac"
                },
                {
                    "$ref": "#/definitions/transfer-cost-pac"
                },
                {
                    "$ref": "#/definitions/transfer-timing-pac"
                },
                {
                    "$ref": "#/definitions/risk-parameter-pac"
                },
                {
                    "properties": {
                        "rule": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rule"
                            },
                            "x-key": "local-id"
                        },
                        "associated-node-rule-group": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:node-rule-group/tapi-topology:uuid"
                            }
                        }
                    }
                }
            ]
        },
        "node-rule-group": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/capacity-pac"
                },
                {
                    "$ref": "#/definitions/transfer-cost-pac"
                },
                {
                    "$ref": "#/definitions/transfer-timing-pac"
                },
                {
                    "$ref": "#/definitions/risk-parameter-pac"
                },
                {
                    "properties": {
                        "rule": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rule"
                            },
                            "x-key": "local-id"
                        },
                        "node-edge-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid"
                            }
                        },
                        "node-rule-group": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:node-rule-group/tapi-topology:uuid"
                            }
                        },
                        "inter-rule-group": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inter-rule-group"
                            },
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "rule": {
            "allOf": [
                {
                    "$ref": "#/definitions/local-class"
                },
                {
                    "properties": {
                        "rule-type": {
                            "type": "string",
                            "enum": [
                                "FORWARDING",
                                "CAPACITY",
                                "COST",
                                "TIMING",
                                "RISK",
                                "GROUPING"
                            ]
                        },
                        "forwarding-rule": {
                            "type": "string",
                            "enum": [
                                "MAY_FORWARD_ACROSS_GROUP",
                                "MUST_FORWARD_ACROSS_GROUP",
                                "CANNOT_FORWARD_ACROSS_GROUP",
                                "NO_STATEMENT_ON_FORWARDING"
                            ]
                        },
                        "override-priority": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "cost-characteristic": {
            "description": "The information for a particular cost characteristic.",
            "properties": {
                "cost-name": {
                    "type": "string",
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName."
                },
                "cost-value": {
                    "type": "string",
                    "description": "The specific cost."
                },
                "cost-algorithm": {
                    "type": "string",
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm."
                }
            }
        },
        "latency-characteristic": {
            "description": "Provides information on latency characteristic for a particular stated trafficProperty.",
            "properties": {
                "traffic-property-name": {
                    "type": "string",
                    "description": "The identifier of the specific traffic property to which the queuing latency applies."
                },
                "fixed-latency-characteristic": {
                    "type": "string",
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity"
                },
                "queing-latency-characteristic": {
                    "type": "string",
                    "description": "The specific queuing latency for the traffic property."
                },
                "jitter-characteristic": {
                    "type": "string",
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                },
                "wander-characteristic": {
                    "type": "string",
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                }
            }
        },
        "risk-characteristic": {
            "description": "The information for a particular risk characteristic where there is a list of risk identifiers related to that characteristic.",
            "properties": {
                "risk-characteristic-name": {
                    "type": "string",
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness. \nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated."
                },
                "risk-identifier-list": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity."
                    }
                }
            }
        },
        "validation-mechanism": {
            "description": "Identifies the validation mechanism and describes the characteristics of that mechanism",
            "properties": {
                "validation-mechanism": {
                    "type": "string",
                    "description": "Name of mechanism used to validate adjacency"
                },
                "layer-protocol-adjacency-validated": {
                    "type": "string",
                    "description": "State of validatiion"
                },
                "validation-robustness": {
                    "type": "string",
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid)"
                }
            }
        },
        "resilience-type": {
            "properties": {
                "restoration-policy": {
                    "type": "string",
                    "enum": [
                        "PER_DOMAIN_RESTORATION",
                        "END_TO_END_RESTORATION",
                        "NA"
                    ]
                },
                "protection-type": {
                    "type": "string",
                    "enum": [
                        "NO_PROTECTON",
                        "ONE_PLUS_ONE_PROTECTION",
                        "ONE_PLUS_ONE_PROTECTION_WITH_DYNAMIC_RESTORATION",
                        "PERMANENT_ONE_PLUS_ONE_PROTECTION",
                        "ONE_FOR_ONE_PROTECTION",
                        "DYNAMIC_RESTORATION",
                        "PRE_COMPUTED_RESTORATION"
                    ]
                }
            }
        },
        "get-topology-detailsRPC_input_schema": {
            "properties": {
                "topology-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-topology-detailsRPC_output_schema": {
            "properties": {
                "topology": {
                    "$ref": "#/definitions/topology"
                }
            }
        },
        "get-node-detailsRPC_input_schema": {
            "properties": {
                "topology-id-or-name": {
                    "type": "string"
                },
                "node-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-node-detailsRPC_output_schema": {
            "properties": {
                "node": {
                    "$ref": "#/definitions/node"
                }
            }
        },
        "get-node-edge-point-detailsRPC_input_schema": {
            "properties": {
                "topology-id-or-name": {
                    "type": "string"
                },
                "node-id-or-name": {
                    "type": "string"
                },
                "ep-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-node-edge-point-detailsRPC_output_schema": {
            "properties": {
                "node-edge-point": {
                    "$ref": "#/definitions/node-edge-point"
                }
            }
        },
        "get-link-detailsRPC_input_schema": {
            "properties": {
                "topology-id-or-name": {
                    "type": "string"
                },
                "link-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-link-detailsRPC_output_schema": {
            "properties": {
                "link": {
                    "$ref": "#/definitions/link"
                }
            }
        },
        "get-topology-listRPC_output_schema": {
            "properties": {
                "topology": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/topology"
                    }
                }
            }
        },
        "get-service-interface-point-detailsRPC_input_schema": {
            "properties": {
                "sip-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-service-interface-point-detailsRPC_output_schema": {
            "properties": {
                "sip": {
                    "$ref": "#/definitions/service-interface-point"
                }
            }
        },
        "get-service-interface-point-listRPC_output_schema": {
            "properties": {
                "sip": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service-interface-point"
                    }
                }
            }
        },
        "update-service-interface-pointRPC_input_schema": {
            "properties": {
                "sip-id-or-name": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "LOCKED",
                        "UNLOCKED"
                    ]
                }
            }
        },
        "connection": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/operational-state-pac"
                },
                {
                    "properties": {
                        "connection-end-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-connectivity:connection-end-point/tapi-connectivity:uuid"
                            }
                        },
                        "lower-connection": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-connectivity:connection/tapi-connectivity:uuid",
                                "description": "An Connection object supports a recursive aggregation relationship such that the internal construction of an Connection can be exposed as multiple lower level Connection objects (partitioning).\nAggregation is used as for the Node/Topology  to allow changes in hierarchy. \nConnection aggregation reflects Node/Topology aggregation. \nThe FC represents a Cross-Connection in an NE. The Cross-Connection in an NE is not necessarily the lowest level of FC partitioning."
                            }
                        },
                        "route": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/route"
                            },
                            "x-key": "local-id"
                        },
                        "switch-control": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/switch-control"
                            },
                            "x-key": "uuid"
                        },
                        "direction": {
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        },
                        "layer-protocol-name": {
                            "type": "string",
                            "enum": [
                                "OTSiA",
                                "OCH",
                                "OTU",
                                "ODU",
                                "ETH",
                                "ETY",
                                "DSR"
                            ]
                        }
                    }
                }
            ],
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE."
        },
        "connection-end-point": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/operational-state-pac"
                },
                {
                    "$ref": "#/definitions/termination-pac"
                },
                {
                    "$ref": "#/definitions/eth-connection-end-point-spec"
                },
                {
                    "properties": {
                        "layer-protocol-name": {
                            "type": "string",
                            "enum": [
                                "OTSiA",
                                "OCH",
                                "OTU",
                                "ODU",
                                "ETH",
                                "ETY",
                                "DSR"
                            ]
                        },
                        "connectivity-service-end-point": {
                            "type": "string",
                            "x-path": "/tapi-common:context/tapi-connectivity:connectivity-service/tapi-connectivity:end-point/tapi-connectivity:local-id"
                        },
                        "parent-node-edge-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid"
                            }
                        },
                        "client-node-edge-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid"
                            }
                        },
                        "connection-port-direction": {
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "The orientation of defined flow at the EndPoint."
                        },
                        "connection-port-role": {
                            "type": "string",
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF",
                                "TRUNK",
                                "UNKNOWN"
                            ],
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. "
                        }
                    }
                }
            ],
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms."
        },
        "connectivity-constraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/route-compute-policy"
                },
                {
                    "properties": {
                        "service-type": {
                            "type": "string",
                            "enum": [
                                "POINT_TO_POINT_CONNECTIVITY",
                                "POINT_TO_MULTIPOINT_CONNECTIVITY",
                                "MULTIPOINT_CONNECTIVITY",
                                "ROOTED_MULTIPOINT_CONNECTIVITY"
                            ]
                        },
                        "service-level": {
                            "type": "string",
                            "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability"
                        },
                        "is-exclusive": {
                            "type": "boolean",
                            "description": "To distinguish if the resources are exclusive to the service  - for example between EPL(isExclusive=true) and EVPL (isExclusive=false), or between EPLAN (isExclusive=true) and EVPLAN (isExclusive=false)"
                        },
                        "requested-capacity": {
                            "$ref": "#/definitions/capacity"
                        },
                        "schedule": {
                            "$ref": "#/definitions/time-range"
                        },
                        "cost-characteristic": {
                            "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cost-characteristic"
                            },
                            "x-key": "cost-name"
                        },
                        "latency-characteristic": {
                            "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/latency-characteristic"
                            },
                            "x-key": "traffic-property-name"
                        },
                        "coroute-inclusion": {
                            "type": "string",
                            "x-path": "/tapi-common:context/tapi-connectivity:connectivity-service/tapi-connectivity:uuid"
                        },
                        "diversity-exclusion": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-connectivity:connectivity-service/tapi-connectivity:uuid"
                            }
                        }
                    }
                }
            ]
        },
        "connectivity-service": {
            "allOf": [
                {
                    "$ref": "#/definitions/service-spec"
                },
                {
                    "$ref": "#/definitions/connectivity-constraint"
                },
                {
                    "$ref": "#/definitions/topology-constraint"
                },
                {
                    "$ref": "#/definitions/admin-state-pac"
                },
                {
                    "$ref": "#/definitions/resilience-constraint"
                },
                {
                    "properties": {
                        "end-point": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/connectivity-service-end-point"
                            },
                            "x-key": "local-id"
                        },
                        "connection": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-connectivity:connection/tapi-connectivity:uuid"
                            }
                        },
                        "direction": {
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        },
                        "layer-protocol-name": {
                            "type": "string",
                            "enum": [
                                "OTSiA",
                                "OCH",
                                "OTU",
                                "ODU",
                                "ETH",
                                "ETY",
                                "DSR"
                            ]
                        }
                    }
                }
            ],
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE."
        },
        "connectivity-service-end-point": {
            "allOf": [
                {
                    "$ref": "#/definitions/local-class"
                },
                {
                    "$ref": "#/definitions/admin-state-pac"
                },
                {
                    "properties": {
                        "layer-protocol-name": {
                            "type": "string",
                            "enum": [
                                "OTSiA",
                                "OCH",
                                "OTU",
                                "ODU",
                                "ETH",
                                "ETY",
                                "DSR"
                            ]
                        },
                        "service-interface-point": {
                            "type": "string",
                            "x-path": "/tapi-common:context/tapi-common:service-interface-point/tapi-common:uuid"
                        },
                        "capacity": {
                            "$ref": "#/definitions/capacity"
                        },
                        "direction": {
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "The orientation of defined flow at the EndPoint."
                        },
                        "role": {
                            "type": "string",
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF",
                                "TRUNK",
                                "UNKNOWN"
                            ],
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. "
                        },
                        "protection-role": {
                            "type": "string",
                            "enum": [
                                "WORK",
                                "PROTECT",
                                "PROTECTED",
                                "NA",
                                "WORK_RESTORE",
                                "PROTECT_RESTORE"
                            ],
                            "description": "To specify the protection role of this Port when create or update ConnectivityService."
                        }
                    }
                }
            ],
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component"
        },
        "route": {
            "allOf": [
                {
                    "$ref": "#/definitions/local-class"
                },
                {
                    "properties": {
                        "connection-end-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-connectivity:connection-end-point/tapi-connectivity:uuid"
                            }
                        }
                    }
                }
            ],
            "description": "The FC Route (FcRoute) object class models the individual routes of an FC. \nThe route of an FC object is represented by a list of FCs at a lower level. \nNote that depending on the service supported by an FC, an the FC can have multiple routes."
        },
        "connectivity-context": {
            "properties": {
                "connectivity-service": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectivity-service"
                    },
                    "x-key": "uuid"
                },
                "connection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connection"
                    },
                    "x-key": "uuid"
                }
            }
        },
        "switch": {
            "allOf": [
                {
                    "$ref": "#/definitions/local-class"
                },
                {
                    "properties": {
                        "selected-connection-end-point": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-connectivity:connection-end-point/tapi-connectivity:uuid"
                            }
                        },
                        "selected-route": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-connectivity:connection/tapi-connectivity:route/tapi-connectivity:local-id"
                            }
                        },
                        "selection-control": {
                            "type": "string",
                            "enum": [
                                "LOCK_OUT",
                                "NORMAL",
                                "MANUAL",
                                "FORCED"
                            ],
                            "description": "Degree of administrative control applied to the switch selection."
                        },
                        "selection-reason": {
                            "type": "string",
                            "enum": [
                                "LOCKOUT",
                                "NORMAL",
                                "MANUAL",
                                "FORCED",
                                "WAIT_TO_REVERT",
                                "SIGNAL_DEGRADE",
                                "SIGNAL_FAIL"
                            ],
                            "description": "The reason for the current switch selection."
                        },
                        "switch-direction": {
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "Indicates whether the switch selects from ingress to the FC or to egress of the FC, or both."
                        }
                    }
                }
            ],
            "description": "The class models the switched forwarding of traffic (traffic flow) between FcPorts (ConnectionEndPoints) and is present where there is protection functionality in the FC (Connection). \nIf an FC exposes protection (having two or more FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.\nThe FC switch represents and defines a protection switch structure encapsulated in the FC. \nEssentially performs one of the functions of the Protection Group in a traditional model. It associates to 2 or more FcPorts each playing the role of a Protection Unit. \nOne or more protection, i.e. standby/backup, FcPorts provide protection for one or more working (i.e. regular/main/preferred) FcPorts where either protection or working can feed one or more protected FcPort.\nThe switch may be used in revertive or non-revertive (symmetric) mode. When in revertive mode it may define a waitToRestore time.\nIt may be used in one of several modes including source switch, destination switched, source and destination switched etc (covering cases such as 1+1 and 1:1).\nIt may be locked out (prevented from switching), force switched or manual switched.\nIt will indicate switch state and change of state.\nThe switch can be switched away from all sources such that it becomes open and hence two coordinated switches can both feed the same LTP so long as at least one of the two is switched away from all sources (is 'open').\nThe ability for a Switch to be 'high impedance' allows bidirectional ForwardingConstructs to be overlaid on the same bidirectional LTP where the appropriate control is enabled to prevent signal conflict.\nThis ability allows multiple alternate routes to be present that otherwise would be in conflict."
        },
        "switch-control": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "$ref": "#/definitions/resilience-constraint"
                },
                {
                    "properties": {
                        "sub-switch-control": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/tapi-common:context/tapi-connectivity:connection/tapi-connectivity:switch-control/tapi-connectivity:uuid"
                            }
                        },
                        "switch": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/switch"
                            },
                            "x-key": "local-id"
                        }
                    }
                }
            ],
            "description": "Represents the capability to control and coordinate switches, to add/delete/modify FCs and to add/delete/modify LTPs/LPs so as to realize a protection scheme."
        },
        "resilience-constraint": {
            "description": "A list of control parameters to apply to a switch.",
            "properties": {
                "resilience-type": {
                    "$ref": "#/definitions/resilience-type"
                },
                "restoration-coordinate-type": {
                    "type": "string",
                    "enum": [
                        "NO_COORDINATE",
                        "HOLD_OFF_TIME",
                        "WAIT_FOR_NOTIFICATION"
                    ],
                    "description": " The coordination mechanism between multi-layers."
                },
                "restore-priority": {
                    "type": "string"
                },
                "reversion-mode": {
                    "type": "string",
                    "enum": [
                        "REVERTIVE",
                        "NON-REVERTIVE"
                    ],
                    "description": "Indcates whether the protection scheme is revertive or non-revertive."
                },
                "wait-to-revert-time": {
                    "type": "string",
                    "description": "If the protection system is revertive, this attribute specifies the time, in minutes, to wait after a fault clears on a higher priority (preferred) resource before reverting to the preferred resource."
                },
                "hold-off-time": {
                    "type": "string",
                    "description": "This attribute indicates the time, in milliseconds, between declaration of signal degrade or signal fail, and the initialization of the protection switching algorithm."
                },
                "is-lock-out": {
                    "type": "boolean",
                    "description": "The resource is configured to temporarily not be available for use in the protection scheme(s) it is part of.\nThis overrides all other protection control states including forced.\nIf the item is locked out then it cannot be used under any circumstances.\nNote: Only relevant when part of a protection scheme."
                },
                "is-frozen": {
                    "type": "boolean",
                    "description": "Temporarily prevents any switch action to be taken and, as such, freezes the current state. \nUntil the freeze is cleared, additional near-end external commands are rejected and fault condition changes and received APS messages are ignored.\nAll administrative controls of any aspect of protection are rejected."
                },
                "is-coordinated-switching-both-ends": {
                    "type": "boolean",
                    "description": "Is operating such that switching at both ends of each flow acorss the FC is coordinated at both ingress and egress ends."
                },
                "max-switch-times": {
                    "type": "string",
                    "description": "Used to limit the maximum swtich times. When work fault disappears , and traffic return to the original work path, switch counter reset."
                },
                "layer-protocol": {
                    "type": "string",
                    "enum": [
                        "OTSiA",
                        "OCH",
                        "OTU",
                        "ODU",
                        "ETH",
                        "ETY",
                        "DSR"
                    ],
                    "description": "Indicate which layer this resilience parameters package configured for."
                }
            }
        },
        "topology-constraint": {
            "properties": {
                "include-topology": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:uuid"
                    }
                },
                "avoid-topology": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:uuid"
                    }
                },
                "include-path": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-path-computation:path/tapi-path-computation:uuid"
                    }
                },
                "exclude-path": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-path-computation:path/tapi-path-computation:uuid"
                    }
                },
                "include-link": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:link/tapi-topology:uuid",
                        "description": "This is a loose constraint - that is it is unordered and could be a partial list "
                    }
                },
                "exclude-link": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:link/tapi-topology:uuid"
                    }
                },
                "include-node": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:uuid",
                        "description": "This is a loose constraint - that is it is unordered and could be a partial list"
                    }
                },
                "exclude-node": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:uuid"
                    }
                },
                "preferred-transport-layer": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "OTSiA",
                            "OCH",
                            "OTU",
                            "ODU",
                            "ETH",
                            "ETY",
                            "DSR"
                        ],
                        "description": "soft constraint requested by client to indicate the layer(s) of transport connection that it prefers to carry the service. This could be same as the service layer or one of the supported server layers"
                    }
                }
            }
        },
        "cep-list": {
            "properties": {
                "connection-end-point": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connection-end-point"
                    },
                    "x-key": "uuid"
                }
            }
        },
        "route-compute-policy": {
            "properties": {
                "route-objective-function": {
                    "type": "string",
                    "enum": [
                        "MIN_WORK_ROUTE_HOP",
                        "MIN_WORK_ROUTE_COST",
                        "MIN_WORK_ROUTE_LATENCY",
                        "MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_HOP",
                        "MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_COST",
                        "MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_LATENCY",
                        "LOAD_BALANCE_MAX_UNUSED_CAPACITY"
                    ]
                },
                "diversity-policy": {
                    "type": "string",
                    "enum": [
                        "SRLG",
                        "SRNG",
                        "SNG",
                        "NODE",
                        "LINK"
                    ]
                }
            }
        }
    }
}