# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class NameAndValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, value_name: str=None, value: str=None):  # noqa: E501
        """NameAndValue - a model defined in Swagger

        :param value_name: The value_name of this NameAndValue.  # noqa: E501
        :type value_name: str
        :param value: The value of this NameAndValue.  # noqa: E501
        :type value: str
        """
        self.swagger_types = {
            'value_name': str,
            'value': str
        }

        self.attribute_map = {
            'value_name': 'value-name',
            'value': 'value'
        }

        self._value_name = value_name
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'NameAndValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The name-and-value of this NameAndValue.  # noqa: E501
        :rtype: NameAndValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value_name(self) -> str:
        """Gets the value_name of this NameAndValue.

        The name of the value. The value need not have a name.  # noqa: E501

        :return: The value_name of this NameAndValue.
        :rtype: str
        """
        return self._value_name

    @value_name.setter
    def value_name(self, value_name: str):
        """Sets the value_name of this NameAndValue.

        The name of the value. The value need not have a name.  # noqa: E501

        :param value_name: The value_name of this NameAndValue.
        :type value_name: str
        """

        self._value_name = value_name

    @property
    def value(self) -> str:
        """Gets the value of this NameAndValue.

        The value  # noqa: E501

        :return: The value of this NameAndValue.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this NameAndValue.

        The value  # noqa: E501

        :param value: The value of this NameAndValue.
        :type value: str
        """

        self._value = value
