# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.connectivity_service import ConnectivityService  # noqa: F401,E501
from tapi_server import util


class DeleteConnectivityServiceRPCOutputSchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, service: ConnectivityService=None):  # noqa: E501
        """DeleteConnectivityServiceRPCOutputSchema - a model defined in Swagger

        :param service: The service of this DeleteConnectivityServiceRPCOutputSchema.  # noqa: E501
        :type service: ConnectivityService
        """
        self.swagger_types = {
            'service': ConnectivityService
        }

        self.attribute_map = {
            'service': 'service'
        }

        self._service = service

    @classmethod
    def from_dict(cls, dikt) -> 'DeleteConnectivityServiceRPCOutputSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The delete-connectivity-serviceRPC_output_schema of this DeleteConnectivityServiceRPCOutputSchema.  # noqa: E501
        :rtype: DeleteConnectivityServiceRPCOutputSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service(self) -> ConnectivityService:
        """Gets the service of this DeleteConnectivityServiceRPCOutputSchema.


        :return: The service of this DeleteConnectivityServiceRPCOutputSchema.
        :rtype: ConnectivityService
        """
        return self._service

    @service.setter
    def service(self, service: ConnectivityService):
        """Sets the service of this DeleteConnectivityServiceRPCOutputSchema.


        :param service: The service of this DeleteConnectivityServiceRPCOutputSchema.
        :type service: ConnectivityService
        """

        self._service = service
