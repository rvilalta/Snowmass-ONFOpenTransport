# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class AvailableTransceiver(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, transceiver_id: str=None ):  # noqa: E501
        """SdmPool - a model defined in Swagger

        :param available_core: The available_core of this NodeEdgePoint.  # noqa: E501
        :type available_core: List[AvailableCore]
        :param available_transceiver: The available_transceiver of this NodeEdgePoint.  # noqa: E501
        :type available_transceiver: AvailableTransceiver
        """
        self.swagger_types = {
            'transceiver_id': str
        }

        self.attribute_map = {
            'transceiver_id': 'transceiver-id'
        }

        self._transceiver_id = transceiver_id


    @classmethod
    def from_dict(cls, dikt) -> 'AvailableTransceiver':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The node-edge-point of this NodeEdgePoint.  # noqa: E501
        :rtype: NodeEdgePoint
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transceiver_id(self) -> str:
        """Gets the available_core of this NodeEdgePoint.

        List of available_core. 
        :return: The available_core of this NodeEdgePoint.
        :rtype: List[AvailableCore]
        """
        return self._transceiver_id

    @transceiver_id.setter
    def transceiver_id(self, transceiver_id: str):
        """Sets the available_core of this NodeEdgePoint.

        List of AvailableCore. 
        
        :param name: The available_core of this NodeEdgePoint.
        :type name: List[AvailableCore]
        """

        self._transceiver_id = transceiver_id
